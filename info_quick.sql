/*
Navicat MySQL Data Transfer

Source Server         : mysql_root
Source Server Version : 50612
Source Host           : localhost:3306
Source Database       : info_quick

Target Server Type    : MYSQL
Target Server Version : 50612
File Encoding         : 65001

Date: 2013-11-26 10:12:33
*/

SET FOREIGN_KEY_CHECKS=0;
-- ----------------------------
-- Table structure for `info`
-- ----------------------------
DROP TABLE IF EXISTS `info`;
CREATE TABLE `info` (
  `info_id` int(11) NOT NULL AUTO_INCREMENT,
  `title` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `content` text CHARACTER SET utf8,
  `label` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `opter` varchar(200) CHARACTER SET utf8 DEFAULT NULL,
  `opt_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `version` int(5) DEFAULT '0',
  PRIMARY KEY (`info_id`)
) ENGINE=InnoDB AUTO_INCREMENT=12 DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of info
-- ----------------------------
INSERT INTO `info` VALUES ('1', 'orange0.1 常用工具jar，date包部分', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">date 时间操作包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.date.DateFormatUtil 时间格式化类，提供各种常用格式的转换</h3>\r\n<h3>&nbsp;</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**自由转换方法</p>\r\n<p style=\"padding-left: 60px;\">* @param date 时间</p>\r\n<p style=\"padding-left: 60px;\">* @param format 时间格式</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static String parseToString(Date date, String format)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatDDMMMYYToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToDDMMMYY(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyyMMddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyy_MM_ddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToddMMMyy(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByDays(Date date, int beforedays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByDays(Date date, int afterdays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期后某小时的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByHours(Date date, int afterhours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByHours(Date date, int beforehours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**输出某天的0:00点钟的Date */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getZeroOfTheDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**取得一个日期是星期几*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getDayOfWeekNum(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的年，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getYear(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的月，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMonth(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的日，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的小时，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getHour(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的分钟，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMinute(Date date)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 从身份证中提取出生日期</p>\r\n<p style=\"padding-left: 60px;\">*</p>\r\n<p style=\"padding-left: 60px;\">* @return yyyy-MM-dd,不满足15或18位,返回空</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getBirthdayFromIdNo(String idNo)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 将月份的英文缩写转成相应的int型，供Calendar、Date等日期类型使用</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static int parseMonth(String monthStr)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* @param dayofmonth 当前月的某天</p>\r\n<p style=\"padding-left: 60px;\">* 返回yyyy-MM-dd格式的日期</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static String getYYYY_mm_ddByDayOfMonth(String dayofmonth)</p>\r\n<p style=\"padding-left: 60px;\">/**@param dayofyear 当前年的某一天 &nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* 返回yyyy-MM-dd格式的日期</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static String getYYYY_mm_ddByDayOfYear(String dayofyear)</p>\r\n<p style=\"padding-left: 60px;\">/**指定年月日的某一天 &nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* 返回yyyy-MM-dd格式的日期</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static String getYYYY_mm_ddByDayOfYear_month_day(int year,int month,int dayofyear)</p>\r\n</body>\r\n</html>', 'JAVA;凯亚;DATE;', 'lswu', '2013-11-07 10:47:11', '3');
INSERT INTO `info` VALUES ('2', 'orange0.1常用工具类 check包部分', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2>check 判断工具包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.check.CheckUtil 判断工具类，该类工具用于校验、判断、比对等</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/** 判断字符串是否为空 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isNull(String value)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断日期变量是否为空 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isNull(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是数字或者 \".\" , \"-\" */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isDigital(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是数字或者 \".\" , \"-\"组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isDigitalString(String value)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是数字0-9 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isInt(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是数字0-9组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isIntString(String value)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是字母 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlpha(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是数字或者字符 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlphaOrDigital(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是数字或者字符组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlphaOrDigital(String value)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是字符组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlphaString(String value)</p>\r\n<p>&nbsp;</p>\r\n</body>\r\n</html>', 'JAVA;CHECK;', 'lswu', '2013-10-17 10:36:10', '1');
INSERT INTO `info` VALUES ('3', 'orange0.1常用工具类 etermagent包', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">etermagent eterm配置类</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.etermagent.TerminalManager 配置管理类</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**获取配置缓冲map**/</p>\r\n<p style=\"padding-left: 60px;\">public synchronized static Map&lt;String, TerminalConfig&gt; get_terminalconfigMap()</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**通过配置的账户释放配置类**/</p>\r\n<p style=\"padding-left: 60px;\">public synchronized static void releaseTerminalConfig(String account)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**获取可用的配置 &nbsp;**/</p>\r\n<p style=\"padding-left: 60px;\">public static TerminalConfig getTerminalConfig()</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**通过类型获取可用的配置 **/</p>\r\n<p style=\"padding-left: 60px;\">public static TerminalConfig getTerminalConfigByType(String type)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**通过配置账号获取可用的配置 **/</p>\r\n<p style=\"padding-left: 60px;\">public static TerminalConfig getTerminalConfigByAccount(String account)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h3>org.orange.etermagent.Terminal 配置执行类</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**执行指令，自动翻页**/</p>\r\n<p style=\"padding-left: 60px;\">public String cmdResult(String cmd)</p>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h3>org.orange.etermagent.TerminalConfig 配置对象类</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**获取配置的使用情况**/</p>\r\n<p style=\"padding-left: 60px;\">public boolean getIdle()&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**设置配置为空闲，同时写入最后操作时间**/</p>\r\n<p style=\"padding-left: 60px;\">public void setIdle(boolean p_idle)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h2>一般的使用方法</h2>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 30px;\">{</p>\r\n<p style=\"padding-left: 60px;\">//通过类型获取空闲配置</p>\r\n<p style=\"padding-left: 60px;\">TerminalConfig config = TerminalManager.getTerminalConfigByType(\"NM\");</p>\r\n<p style=\"padding-left: 60px;\">/*生成连接socket*/</p>\r\n<p style=\"padding-left: 60px;\">Terminal t = new Terminal(config);</p>\r\n<p style=\"padding-left: 60px;\">if(!t.isValid())return;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/*执行指令 */</p>\r\n<p style=\"padding-left: 60px;\">t.cmdResult(\"RT\");</p>\r\n<p style=\"padding-left: 60px;\">/*释放配置 */</p>\r\n<p style=\"padding-left: 60px;\">TerminalManager.releaseTerminalConfig(config.ETERM_ACCOUNT);</p>\r\n<p style=\"padding-left: 60px;\">/*关闭执行类*/</p>\r\n<p style=\"padding-left: 60px;\">t.close();</p>\r\n<p style=\"padding-left: 30px;\">}</p>\r\n</body>\r\n</html>', 'JAVA;ETERM;ETERMAGENT;', 'lswu', '2013-10-17 10:35:10', '2');
INSERT INTO `info` VALUES ('4', 'orange0.1 常用工具包 Math包', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">Math 数学计算类</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.math.MathUtil</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 浮点数转换成整数，四舍五入</p>\r\n<p style=\"padding-left: 60px;\">* 55.51-&gt;56 55.490-&gt;55</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double formatPrice(double price)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指 定精度，以后的数字四舍五入。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @param v1</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;被除数</p>\r\n<p style=\"padding-left: 60px;\">* @param v2</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;除数</p>\r\n<p style=\"padding-left: 60px;\">* @param scale</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;表示表示需要精确到小数点以后几位。</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的商</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleDiv(double v1, double v2, int scale)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供精确的乘法运算。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @param v1</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;被乘数</p>\r\n<p style=\"padding-left: 60px;\">* @param v2</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;乘数</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的积</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleMul(double v1, double v2)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供精确的减法运算。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @param v1</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;被减数</p>\r\n<p style=\"padding-left: 60px;\">* @param v2</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;减数</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的差</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleSubtract(double v1, double v2)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供精确的加法运算。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的和</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleAdd(double v1, double v2)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**浮点数以5为单位向上靠</p>\r\n<p style=\"padding-left: 60px;\">* 50.01-&gt;55，50.49-&gt;55，55.01-&gt;60</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @return 上靠的5的倍数</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static long doubleToUpperLong(double d1)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**差值进位算法</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* 3&lt; x &lt;7，则x进5 </p>\r\n<p style=\"padding-left: 60px;\">* x &lt; 3，则x进0 </p>\r\n<p style=\"padding-left: 60px;\">* x &gt; 7，则x进10</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static long longToFive(long l1)&nbsp;</p>\r\n</body>\r\n</html>', 'JAVA;MATH;', 'lswu', '2013-10-17 10:34:10', '1');
INSERT INTO `info` VALUES ('5', 'orange0.1 常用工具包 property包', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">property 配置文件读取包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.property.LocalPropertyUtil &nbsp; &nbsp;控制jar当前文件夹下的配置文件</h3>\r\n</li>\r\n<li>\r\n<h3>org.orange.property.UserFolderPropertyUtil &nbsp; &nbsp;控制用户目录下文件夹内的配置文件，默认路径user.home/orange.config/</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**获得刷新时间**/</p>\r\n<p style=\"padding-left: 60px;\">public Long getConfigRefreshTime(String configFileName,long refreshTime)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 获取配置文件的配置项*/</p>\r\n<p style=\"padding-left: 60px;\">public String getProperty(String configFileName,String paramString) throws OperatePropertyException</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 从配置文件缓存中去除对该配置文件的维护</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public void releaseConfig(String configFileName)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 设置配置文件的刷新时间,时间单位ms</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp;设置刷新时间后，该配置文件会立刻刷新</p>\r\n<p style=\"padding-left: 60px;\">* */</p>\r\n<p style=\"padding-left: 60px;\">public void setConfigRefreshTime(String configFileName,long refreshTime)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**写操作配置项**/</p>\r\n<p style=\"padding-left: 60px;\">public void writeProperty(String configFileName, String key, String value) {</p>\r\n</body>\r\n</html>', 'JAVA;PROPERTY;配置文件;', 'lswu', '2013-10-17 10:34:10', '1');
INSERT INTO `info` VALUES ('6', 'orange0.1 常用工具包 util包', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">Util 通用工具包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.util.KeySender</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**向光标处发送模拟输出</p>\r\n<p style=\"padding-left: 60px;\">* @param keySqe 输出字符串</p>\r\n<p style=\"padding-left: 60px;\">* @param waitingSendTime 延迟发送时间</p>\r\n<p style=\"padding-left: 60px;\">* @param sendStartIndex 输出的启始位置</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp;**/</p>\r\n<p style=\"padding-left: 60px;\">public void keySend(byte[] keySqe,long waitingSendTime,int sendStartIndex) throws Exception&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h3>org.orange.util.NormalStringUtil</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 判断某一个字符在字符串中出现的次数</p>\r\n<p style=\"padding-left: 60px;\">* */</p>\r\n<p style=\"padding-left: 60px;\">public static int getCharCount(String value, char c)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 获得字符串变量去空格，如果字符串为空返回null_str */</p>\r\n<p style=\"padding-left: 60px;\">public static String getString(String value, String null_str)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 将segidxs数字字符串里面的元素按照从低到高进行排序&ldquo;053241&rdquo;-》&ldquo;012345&rdquo; */</p>\r\n<p style=\"padding-left: 60px;\">public static String sortStringAsc(String segidxs)&nbsp;</p>\r\n<p>&nbsp;</p>\r\n</body>\r\n</html>', 'JAVA;', 'lswu', '2013-10-17 10:33:10', '0');
INSERT INTO `info` VALUES ('7', 'Beanutils 基本用法', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h1>1.属性的动态getter,setter</h1>\r\n<p>根据名字动态取得的，就像这样：　　</p>\r\n<p>BeanUtils.getProperty(myBean,\"code\");</p>\r\n<p>&nbsp;</p>\r\n<p>而BeanUtils更强的功能是直接访问内嵌对象的属性，只要使用点号分隔。</p>\r\n<p>BeanUtils.getProperty(orderBean, \"address.city\");</p>\r\n<p>&nbsp;</p>\r\n<p>BeanUtils还支持List和Map类型的属性。如下面的语法即可取得顾客列表中第一个顾客的名字</p>\r\n<p>BeanUtils.getProperty(orderBean, \"customers[1].name\");</p>\r\n<p>&nbsp;</p>\r\n<p>其中BeanUtils会使用ConvertUtils类把字符串转为Bean属性的真正类型，方便从HttpServletRequest等对象中提取bean，或者把bean输出到页面。</p>\r\n<p>而PropertyUtils就会原色的保留Bean原来的类型。</p>\r\n<p>&nbsp;</p>\r\n<p>其他相关的方法：</p>\r\n<table border=\"1\">\r\n<tbody>\r\n<tr>\r\n<td>\r\n<p>/**属性使用**/</p>\r\n<p>String name = \"testMan\";</p>\r\n<p>PropertyUtils.setSimpleProperty(person, \"name\", name);</p>\r\n<p>String nameTest = (String)</p>\r\n<p>&nbsp; &nbsp; &nbsp; PropertyUtils.getSimpleProperty(person, \"name\");</p>\r\n<p>&nbsp;</p>\r\n<p>/**数组类、容器类属性 &nbsp; [] &nbsp;**/</p>\r\n<p>PropertyUtils.setIndexedProperty(person, \"nameArray[0]\", \"c\");</p>\r\n<p>Object indexObj = PropertyUtils.getIndexedProperty(person, \"nameArray[0]\");</p>\r\n<p>&nbsp;</p>\r\n<p>person.getNameList().add(\"ciara\");</p>\r\n<p>PropertyUtils.setIndexedProperty(person, \"nameList[0]\", \"yoara\");</p>\r\n<p>Object indexObj_list = PropertyUtils.getIndexedProperty(person, \"nameList[0]\");</p>\r\n<p>PropertyUtils.setIndexedProperty(person, \"nameList\",0, \"yoara\");</p>\r\n<p>Object indexObj_index = PropertyUtils.getIndexedProperty(person, \"nameList\",0);</p>\r\n<p>&nbsp;</p>\r\n<p>/**Map类属性 &nbsp;() &nbsp;**/</p>\r\n<p>person.getNameMap().put(\"ciara\", \"yoara\");</p>\r\n<p>PropertyUtils.setMappedProperty(person, \"nameMap(ciara)\", \"yoara1987\");</p>\r\n<p>Object mapObj_list = PropertyUtils.getMappedProperty(person, \"nameMap(ciara)\");</p>\r\n<p>PropertyUtils.setMappedProperty(person, \"nameMap\",\"ciara\", \"yoara1987\");</p>\r\n<p>Object mapObj_ = PropertyUtils.getMappedProperty(person, \"nameMap\",\"ciara\");</p>\r\n<p>&nbsp;</p>\r\n<p>/** 嵌套的其他对象属性 **/</p>\r\n<p>person.setP2(new ObjPerson_2());</p>\r\n<p>PropertyUtils.setNestedProperty(person, \"p2.name\", \"ciara\");</p>\r\n<p>Object nested = PropertyUtils.getNestedProperty(person, \"p2.name\");</p>\r\n<p>&nbsp;</p>\r\n<p>/**总方法**/</p>\r\n<p>//PropertyUtils.getProperty(Object, String)</p>\r\n<p>//PropertyUtils.setProperty(Object, String, Object)</p>\r\n<p>//String city = (String) PropertyUtils.getProperty(employee,\"subordinate[3].address(home).city\");</p>\r\n</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n<h1><strong>2.beanCompartor 动态排序</strong></h1>\r\n<div>还是通过反射，动态设定Bean按照哪个属性来排序，而不再需要在bean的Compare接口进行复杂的条件判断。</div>\r\n<pre>List peoples = ...; // Person对象的列表Collections.sort(peoples, new BeanComparator(\"age\"));</pre>\r\n<p>如果要支持多个属性的复合排序，如\"Order By lastName,firstName\"</p>\r\n<pre>ArrayList sortFields = new ArrayList();sortFields.add(new BeanComparator(\"lastName\"));</pre>\r\n<pre>sortFields.add(new BeanComparator(\"firstName\"));</pre>\r\n<pre>ComparatorChain multiSort = new ComparatorChain(sortFields);</pre>\r\n<pre>Collections.sort(rows,multiSort);</pre>\r\n<p>其中ComparatorChain属于jakata commons-collections包。<br />如果age属性不是普通类型，构造函数需要再传入一个comparator对象为age变量排序。<br />另外, BeanCompartor本身的ComparebleComparator, 遇到属性为null就会抛出异常, 也不能设定升序还是降序。<br />这个时候又要借助commons-collections包的ComparatorUtils.</p>\r\n<p>&nbsp;&nbsp; Comparator mycmp = ComparableComparator.getInstance();<br />&nbsp;&nbsp;&nbsp;mycmp = ComparatorUtils.nullLowComparator(mycmp);&nbsp; //允许null<br />&nbsp;&nbsp; mycmp = ComparatorUtils.reversedComparator(mycmp); //逆序<br />&nbsp;&nbsp; Comparator cmp = new BeanComparator(sortColumn, mycmp);</p>\r\n<p>&nbsp;</p>\r\n<h1><strong>3.Converter 把Request或ResultSet中的字符串绑定到对象的属性</strong></h1>\r\n<p>&nbsp;&nbsp; 经常要从request,resultSet等对象取出值来赋入bean中，下面的代码谁都写腻了，如果不用MVC框架的绑定功能的话。</p>\r\n<pre>   String a = request.getParameter(\"a\");   bean.setA(a);   String b = ....</pre>\r\n<p>&nbsp; &nbsp;不妨写一个Binder:</p>\r\n<pre>     MyBean bean = ...;<br />     HashMap map = new HashMap();<br />     Enumeration names = request.getParameterNames();<br />     while (names.hasMoreElements())    {<br />         String name = (String) names.nextElement();      <br />         map.put(name, request.getParameterValues(name));    <br />     }    <br />     BeanUtils.populate(bean, map);</pre>\r\n<p>&nbsp;&nbsp;&nbsp; 其中BeanUtils的populate方法或者getProperty,setProperty方法其实都会调用convert进行转换。</p>\r\n<p>&nbsp;</p>\r\n<h1>4.其他功能</h1>\r\n<h2><strong>4.1 PropertyUtils，当属性为Collection,Map时的动态读取：</strong></h2>\r\n<div>&nbsp;</div>\r\n<div>Collection: 提供index</div>\r\n<div>&nbsp;&nbsp; BeanUtils.getIndexedProperty(orderBean,\"items\",1);<br />或者<br />&nbsp; BeanUtils.getIndexedProperty(orderBean,\"items[1]\");<br /><br />Map: 提供Key Value<br />&nbsp; BeanUtils.getMappedProperty(orderBean, \"items\",\"111\");//key-value goods_no=111&nbsp;<br />或者<br />&nbsp; BeanUtils.getMappedProperty(orderBean, \"items(111)\")</div>\r\n<div>&nbsp;</div>\r\n<h2><strong>4.2 PropertyUtils，获取属性的Class类型</strong></h2>\r\n<pre>&nbsp;&nbsp;&nbsp;&nbsp; public static Class getPropertyType(Object bean, String name)</pre>\r\n<div>&nbsp;</div>\r\n<h2><strong>4.3 ConstructorUtils，动态创建对象</strong></h2>\r\n<p>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</p>\r\n<pre style=\"display: inline !important;\">public static Object invokeConstructor(Class klass, Object arg)</pre>\r\n<h2><strong>4.4 MethodUtils，动态调用方法</strong></h2>\r\n<p><strong>&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;</strong>MethodUtils.invokeMethod(bean, methodName, parameter);</p>\r\n<h2><strong>4.5 动态Bean 用DynaBean减除不必要的VO和FormBean</strong></h2>\r\n<p>X</p>\r\n</body>\r\n</html>', 'JAVA;', 'lswu', '2013-10-17 15:39:10', '0');
INSERT INTO `info` VALUES ('8', 'betwixt详细使用说明', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h1>功能说明&nbsp;</h1>\r\n<p>提供了将 beans 转换成 XML 的方法。</p>\r\n<h1>需要的包&nbsp;</h1>\r\n<p>commons-collections-3.2.jar</p>\r\n<p>commons-logging-1.0.4.jar</p>\r\n<p>commons-beanutils-1.8.0-BETA.jar&nbsp;</p>\r\n<h1>说明&nbsp;</h1>\r\n<p>betwixt也可以将xml转化成为bean,功能上和commons-digester相同,实际上它也只是对commons-digester进行了一个包装和扩展,</p>\r\n<p>因此如果需要\"xml转化成为bean\",则需要commons-digester-1.8.jar,这个jar放到not nessary文件夹下</p>\r\n</body>\r\n</html>', 'JAVA;XML;', 'lswu', '2013-10-17 15:43:10', '0');
INSERT INTO `info` VALUES ('9', 'commons项目简单介绍', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h1>commons简单介绍</h1>\r\n<table style=\"height: 1932px;\" width=\"1100\"><colgroup><col width=\"181\" /> <col width=\"514\" /> <col width=\"549\" /> </colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/attributes/\">Attributes</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Runtime&nbsp;API&nbsp;to&nbsp;metadata&nbsp;attributes&nbsp;such&nbsp;as&nbsp;doclet&nbsp;tags.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">运行时API&nbsp;doclet的标签，如元数据属性。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/bcel/\">BCEL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Byte&nbsp;Code&nbsp;Engineering&nbsp;Library&nbsp;-&nbsp;analyze,&nbsp;create,&nbsp;and&nbsp;manipulate&nbsp;Java&nbsp;class&nbsp;files</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">字节代码工程库&nbsp;-&nbsp;分析，创建和操作Java类文件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/beanutils/\">BeanUtils</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Easy-to-use&nbsp;wrappers&nbsp;around&nbsp;the&nbsp;Java&nbsp;reflection&nbsp;and&nbsp;introspection&nbsp;APIs.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">基于Java&nbsp;reflection&nbsp;和introspection&nbsp;APIs，易于使用的包装类工具包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/betwixt/\">Betwixt</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Services&nbsp;for&nbsp;mapping&nbsp;JavaBeans&nbsp;to&nbsp;XML&nbsp;documents,&nbsp;and&nbsp;vice&nbsp;versa.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">javabean和xml文档中相互转换的包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/bsf/\">BSF</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Bean&nbsp;Scripting&nbsp;Framework&nbsp;-&nbsp;interface&nbsp;to&nbsp;scripting&nbsp;languages,&nbsp;including&nbsp;JSR-223</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Bean脚本框架&nbsp;-&nbsp;脚本语言的接口，包括JSR-223</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/chain/\">Chain</a></td>\r\n<td class=\"et7\" width=\"514\" height=\"20\">Chain&nbsp;of&nbsp;Responsibility<span class=\"font1\">&nbsp;</span><span class=\"font1\">pattern&nbsp;implemention.</span></td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">责任链模式的实现包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/cli/\">CLI</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Command&nbsp;Line&nbsp;arguments&nbsp;parser.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">命令行参数解析器。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/codec/\">Codec</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">General&nbsp;encoding/decoding&nbsp;algorithms&nbsp;(for&nbsp;example&nbsp;phonetic,&nbsp;base64,&nbsp;URL).</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">通用编码/解码算法（例如语音，base64编码，URL）。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/collections/\">Collections</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Extends&nbsp;or&nbsp;augments&nbsp;the&nbsp;Java&nbsp;Collections&nbsp;Framework.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">扩展或扩充Java集合框架。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/compress/\">Compress</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Defines&nbsp;an&nbsp;API&nbsp;for&nbsp;working&nbsp;with&nbsp;tar,&nbsp;zip&nbsp;and&nbsp;bzip2&nbsp;files.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">一组为处理tar.zip.bzips等文件而定义的API</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/configuration/\">Configuration</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Reading&nbsp;of&nbsp;configuration/preferences&nbsp;files&nbsp;in&nbsp;various&nbsp;formats.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">读取配置/偏好文件，可用于各种格式。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/csv/\">CSV</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Component&nbsp;for&nbsp;reading&nbsp;and&nbsp;writing&nbsp;comma&nbsp;separated&nbsp;value&nbsp;files.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于读写csv文件的一组组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/daemon/\">Daemon</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Alternative&nbsp;invocation&nbsp;mechanism&nbsp;for&nbsp;unix-daemon-like&nbsp;java&nbsp;code.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Commons&nbsp;Daemon&nbsp;可以帮你实现将一个普通的&nbsp;Java&nbsp;应用变成系统的一个后台服务。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/dbcp/\">DBCP</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Database&nbsp;connection&nbsp;pooling&nbsp;services.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">提供数据库连接缓冲服务</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/dbutils/\">DbUtils</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">JDBC&nbsp;helper&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">JDBC的扩充、辅助库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/digester/\">Digester</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">XML-to-Java-object&nbsp;mapping&nbsp;utility.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">XML映射Java的实现组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/discovery/\">Discovery</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Tools&nbsp;for&nbsp;locating&nbsp;resources&nbsp;by&nbsp;mapping&nbsp;service/reference&nbsp;names&nbsp;to&nbsp;resource&nbsp;names.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">资源名称映射服务/引用名称定位资源的工具。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/el/\">EL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Interpreter&nbsp;for&nbsp;the&nbsp;Expression&nbsp;Language&nbsp;defined&nbsp;by&nbsp;the&nbsp;JSP&nbsp;2.0&nbsp;specification.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">一个用来解析&nbsp;JSP&nbsp;2.0&nbsp;的表达式语言的&nbsp;Java&nbsp;类库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/email/\">Email</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Library&nbsp;for&nbsp;sending&nbsp;e-mail&nbsp;from&nbsp;Java.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">发送邮件的库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/exec/\">Exec</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">API&nbsp;for&nbsp;dealing&nbsp;with&nbsp;external&nbsp;process&nbsp;execution&nbsp;and&nbsp;environment&nbsp;management&nbsp;in&nbsp;Java.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于处理外部进程执行和环境管理的API组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/fileupload/\">FileUpload</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">File&nbsp;upload&nbsp;capability&nbsp;for&nbsp;your&nbsp;servlets&nbsp;and&nbsp;web&nbsp;applications.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">为web应用提供上传文件功能的支持</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/functor/\">Functor</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">A&nbsp;functor&nbsp;is&nbsp;a&nbsp;function&nbsp;that&nbsp;can&nbsp;be&nbsp;manipulated&nbsp;as&nbsp;an&nbsp;object,&nbsp;or&nbsp;an&nbsp;object&nbsp;representing&nbsp;a&nbsp;single,&nbsp;generic&nbsp;function.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">&nbsp;Functor&nbsp;库包括大量基本构造，可以在涉及闭包和高阶函数的复杂使用场景中重复使用。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/imaging/\">Imaging&nbsp;(previously&nbsp;called&nbsp;Sanselan)</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">A&nbsp;pure-Java&nbsp;image&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">纯Java的图像库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/io/\">IO</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Collection&nbsp;of&nbsp;I/O&nbsp;utilities.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">IO相关的集合</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/jci/\">JCI</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Java&nbsp;Compiler&nbsp;Interface</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">是一个封装了&nbsp;Java&nbsp;编译器的类库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"57\"><a href=\"http://commons.apache.org/jcs/\">JCS</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"57\">Java&nbsp;Caching&nbsp;System</td>\r\n<td class=\"et10\" width=\"549\" height=\"57\">它是复合式的缓冲工具，具有配置灵活的特点。JCS提供内存、硬盘、分布式架构、构建缓存服务器四种方式来实现对象缓存；能够很方便的实现缓存的差异化定制。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"38\"><a href=\"http://commons.apache.org/jelly/\">Jelly</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"38\">XML&nbsp;based&nbsp;scripting&nbsp;and&nbsp;processing&nbsp;engine.</td>\r\n<td class=\"et10\" width=\"549\" height=\"38\">Jelly是一个基于XML与Java的脚本和处理引擎，Jelly借鉴了JSP定指标签，能够把XML转换成可执行代码。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/jexl/\">Jexl</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Expression&nbsp;language&nbsp;which&nbsp;extends&nbsp;the&nbsp;Expression&nbsp;Language&nbsp;of&nbsp;the&nbsp;JSTL.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Jexl是一个表达式语言，通过借鉴来自于Velocity的经验扩展了JSTL定义的表达式语言。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"38\"><a href=\"http://commons.apache.org/jxpath/\">JXPath</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"38\">Utilities&nbsp;for&nbsp;manipulating&nbsp;Java&nbsp;Beans&nbsp;using&nbsp;the&nbsp;XPath&nbsp;syntax.</td>\r\n<td class=\"et10\" width=\"549\" height=\"38\">定义了一个简单的XPath表达式语言的解析器.JXPath应用XPath表达式来操纵各种类型的对象包括:JavaBeans,Maps,Servlet&nbsp;contexts,DOM等.</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/lang/\">Lang</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Provides&nbsp;extra&nbsp;functionality&nbsp;for&nbsp;classes&nbsp;in&nbsp;java.lang.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">扩展java.lang包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/launcher/\">Launcher</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Cross&nbsp;platform&nbsp;Java&nbsp;application&nbsp;launcher.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">跨平台的Java应用程序启动库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/logging/\">Logging</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Wrapper&nbsp;around&nbsp;a&nbsp;variety&nbsp;of&nbsp;logging&nbsp;API&nbsp;implementations.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">基于logging&nbsp;API&nbsp;的日志包装库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/math/\">Math</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Lightweight,&nbsp;self-contained&nbsp;mathematics&nbsp;and&nbsp;statistics&nbsp;components.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">轻量级的数学组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/modeler/\">Modeler</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Mechanisms&nbsp;to&nbsp;create&nbsp;Model&nbsp;MBeans&nbsp;compatible&nbsp;with&nbsp;JMX&nbsp;specification.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于创建基于&nbsp;JMX&nbsp;规范的MBeans模型的工具。可参考http://www.ibm.com/developerworks/cn/java/l-jmx/index.html</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/net/\">Net</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Collection&nbsp;of&nbsp;network&nbsp;utilities&nbsp;and&nbsp;protocol&nbsp;implementations.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">网络应用和协议实现的组件集合</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"57\"><a href=\"http://commons.apache.org/ognl/\">OGNL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"57\">An&nbsp;Object-Graph&nbsp;Navigation&nbsp;Language</td>\r\n<td class=\"et10\" width=\"549\" height=\"57\">Object&nbsp;Graph&nbsp;Navigation&nbsp;Language的缩写，与JSP，JSF相比，OGNL是一种功能非常强大的针对Java的表达式语言（EL），它可用来读取和更新Java对象的属性。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/pool/\">Pool</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Generic&nbsp;object&nbsp;pooling&nbsp;component.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">通用对象池组件，像JDBC和tomcat就是基于此</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/primitives/\">Primitives</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Smaller,&nbsp;faster&nbsp;and&nbsp;easier&nbsp;to&nbsp;work&nbsp;with&nbsp;types&nbsp;supporting&nbsp;Java&nbsp;primitive&nbsp;types.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">提供了一个更小，更快和更易使用的对Java基本类型的支持。当前主要是针对基本类型的&nbsp;collection。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/proxy/\">Proxy</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Library&nbsp;for&nbsp;creating&nbsp;dynamic&nbsp;proxies.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">动态代理支持库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/imaging\">Sanselan&nbsp;(now&nbsp;called&nbsp;Imaging)</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">A&nbsp;pure-Java&nbsp;image&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">纯Java的图像库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"100\"><a href=\"http://commons.apache.org/scxml/\">SCXML</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"100\">An&nbsp;implementation&nbsp;of&nbsp;the&nbsp;State&nbsp;Chart&nbsp;XML&nbsp;specification&nbsp;aimed&nbsp;at&nbsp;creating&nbsp;and&nbsp;maintaining&nbsp;a&nbsp;Java&nbsp;SCXML&nbsp;engine.&nbsp;It&nbsp;is&nbsp;capable&nbsp;of&nbsp;executing&nbsp;a&nbsp;state&nbsp;machine&nbsp;defined&nbsp;using&nbsp;a&nbsp;SCXML&nbsp;document,&nbsp;and&nbsp;abstracts&nbsp;out&nbsp;the&nbsp;environment&nbsp;interfaces.</td>\r\n<td class=\"et10\" width=\"549\" height=\"100\">有限状态机的实现，旨在建立和维护一个Java&nbsp;SCXML引擎。使用SCXML文档定义执行一个状态机，它能够抽象出环境接口。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/transaction/\">Transaction</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Implementations&nbsp;for&nbsp;multi&nbsp;level&nbsp;locks,&nbsp;transactional&nbsp;collections&nbsp;and&nbsp;transactional&nbsp;file&nbsp;access.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Commons&nbsp;Transaction&nbsp;旨在提供一个轻量级、标准化、高效的&nbsp;Java&nbsp;事务多线程编程的工具包，实现了多级锁、事务集合和事务级文件访问。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/validator/\">Validator</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Framework&nbsp;to&nbsp;define&nbsp;validators&nbsp;and&nbsp;validation&nbsp;rules&nbsp;in&nbsp;an&nbsp;xml&nbsp;file.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">通用验证系统，主要用于web应用，定义验证和验证规则XML的框架包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"247\"><a href=\"http://commons.apache.org/vfs/\">VFS</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"247\">Virtual&nbsp;File&nbsp;System&nbsp;component&nbsp;for&nbsp;treating&nbsp;files,&nbsp;FTP,&nbsp;SMB,&nbsp;ZIP&nbsp;and&nbsp;such&nbsp;like&nbsp;as&nbsp;a&nbsp;single&nbsp;logical&nbsp;file&nbsp;system.</td>\r\n<td class=\"et10\" width=\"549\" height=\"247\">VFS把对各种各样的的文件系统的访问封装成统一的应用程序接口，这大大的简化了应用程序本身代码的复杂度。Apache上的项目的稳定性也是有目共睹的，目前VFS支持下面一些文件系统，当然你也可以自行进行扩展。<br /><br />FTP<br />Local&nbsp;Files<br />HTTP&nbsp;and&nbsp;HTTPS<br />SFTP<br />Temporary&nbsp;Files<br />Zip,&nbsp;Jar&nbsp;and&nbsp;Tar&nbsp;(uncompressed,&nbsp;tgz&nbsp;or&nbsp;tbz2)<br />gzip&nbsp;and&nbsp;bzip2<br />res<br />ram</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</body>\r\n</html>', 'JAVA;COMMONS;', 'lswu', '2013-10-17 16:51:10', '2');
INSERT INTO `info` VALUES ('10', 'eclipse打jar包，有引用其他加包的', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<p>eclipse打完jar后，需要修改Manifest.mf文件，在class-path中加入引用的包，注意前面的点。</p>\r\n<p>&nbsp;</p>\r\n<p>Manifest-Version: 1.0</p>\r\n<p><strong>Class-Path: . orange-0.1.jar</strong></p>\r\n<p>Main-Class: cc.Test</p>\r\n<p>&nbsp;</p>\r\n<p>&nbsp;</p>\r\n<p>set CLASSPATH=test.jar</p>\r\n<p>java -cp \"%CLASSPATH%\" cc.Test</p>\r\n</body>\r\n</html>', 'JAVA;JAR;', 'lswu', '2013-10-21 16:28:10', '1');
INSERT INTO `info` VALUES ('11', 'orange0.1 ObjectCopyUtil工具', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<p>ObjectCopyUtil 属性复制工具</p>\r\n<p style=\"padding-left: 30px;\">/**</p>\r\n<p style=\"padding-left: 30px;\">* 需要apache.BeanUtils 包支持</p>\r\n<p style=\"padding-left: 30px;\">* 把源类orig中的指定字段值（与dest类中字段名相同）复制到目标类dest中&lt;br/&gt;</p>\r\n<p style=\"padding-left: 30px;\">* 使用更新过的 commons组件包 BeanUtils</p>\r\n<p style=\"padding-left: 30px;\">* @param orig 源类</p>\r\n<p style=\"padding-left: 30px;\">* @param dest 目标类</p>\r\n<p style=\"padding-left: 30px;\">*/</p>\r\n<p style=\"padding-left: 30px;\">public static void copy(Object orig,Object dest)</p>\r\n<p>X</p>\r\n</body>\r\n</html>', 'JAVA;COPY;', 'lswu', '2013-11-07 10:52:11', '0');

-- ----------------------------
-- Table structure for `info_history`
-- ----------------------------
DROP TABLE IF EXISTS `info_history`;
CREATE TABLE `info_history` (
  `old_id` int(11) NOT NULL,
  `old_version` int(5) NOT NULL DEFAULT '0',
  `old_opter` varchar(200) DEFAULT NULL,
  `old_opt_time` timestamp NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  `old_content` text,
  `old_label` varchar(200) DEFAULT NULL,
  PRIMARY KEY (`old_id`,`old_version`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of info_history
-- ----------------------------
INSERT INTO `info_history` VALUES ('1', '0', 'lswu', '2013-10-17 09:02:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">date包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.date.DateFormatUtil 时间格式化类，提供各种常用格式的转换</h3>\r\n<h3>&nbsp;</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatDDMMMYYToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToDDMMMYY(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyyMMddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyy_MM_ddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToddMMMyy(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByDays(Date date, int beforedays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByDays(Date date, int afterdays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期后某小时的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByHours(Date date, int afterhours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByHours(Date date, int beforehours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**输出某天的0:00点钟的Date */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getZeroOfTheDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**取得一个日期是星期几*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getDayOfWeekNum(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的年，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getYear(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的月，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMonth(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的日，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的小时，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getHour(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的分钟，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMinute(Date date)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 从身份证中提取出生日期</p>\r\n<p style=\"padding-left: 60px;\">*</p>\r\n<p style=\"padding-left: 60px;\">* @return yyyy-MM-dd,不满足15或18位,返回空</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getBirthdayFromIdNo(String idNo)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 将月份的英文缩写转成相应的int型，供Calendar、Date等日期类型使用</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static int parseMonth(String monthStr)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 30px;\">&nbsp;</p>\r\n<p>XX</p>\r\n</body>\r\n</html>', 'JAVA;凯亚;DATE;');
INSERT INTO `info_history` VALUES ('1', '1', 'lswu', '2013-10-17 10:36:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">date 时间操作包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.date.DateFormatUtil 时间格式化类，提供各种常用格式的转换</h3>\r\n<h3>&nbsp;</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatDDMMMYYToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToDDMMMYY(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyyMMddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyy_MM_ddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToddMMMyy(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByDays(Date date, int beforedays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByDays(Date date, int afterdays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期后某小时的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByHours(Date date, int afterhours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByHours(Date date, int beforehours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**输出某天的0:00点钟的Date */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getZeroOfTheDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**取得一个日期是星期几*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getDayOfWeekNum(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的年，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getYear(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的月，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMonth(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的日，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的小时，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getHour(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的分钟，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMinute(Date date)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 从身份证中提取出生日期</p>\r\n<p style=\"padding-left: 60px;\">*</p>\r\n<p style=\"padding-left: 60px;\">* @return yyyy-MM-dd,不满足15或18位,返回空</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getBirthdayFromIdNo(String idNo)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 将月份的英文缩写转成相应的int型，供Calendar、Date等日期类型使用</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static int parseMonth(String monthStr)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 30px;\">&nbsp;</p>\r\n<p>XX</p>\r\n</body>\r\n</html>', 'JAVA;凯亚;DATE;');
INSERT INTO `info_history` VALUES ('1', '2', 'lswu', '2013-10-23 09:25:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">date 时间操作包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.date.DateFormatUtil 时间格式化类，提供各种常用格式的转换</h3>\r\n<h3>&nbsp;</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDDMMMYYToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**DDMMMYY转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatDDMMMYYToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToDDMMMYY(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyyMMddToyyyy_MM_dd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyyMMdd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyyMMddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToDDMMMYY(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatyyyy_MM_ddToyyyyMMdd(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**yyyy-MM-dd转成Date**/</p>\r\n<p style=\"padding-left: 60px;\">public static Date formatyyyy_MM_ddToDate(String date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**Date转成yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatDateToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMdd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMdd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 DDMMMYY**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToddMMMyy(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyy-MM-dd HH:mm:ss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyy_MM_dd_HH_mm_ss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**格式化当前时间 yyyyMMddHHmmss**/</p>\r\n<p style=\"padding-left: 60px;\">public static String formatNowToyyyyMMddHHmmss(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByDays(Date date, int beforedays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByDays(Date date, int afterdays)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期后某小时的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getAfterDateByHours(Date date, int afterhours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回给定日期前几天在某小时某分钟某秒的时间 */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getBeforeDateByHours(Date date, int beforehours)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**输出某天的0:00点钟的Date */</p>\r\n<p style=\"padding-left: 60px;\">public static Date getZeroOfTheDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**取得一个日期是星期几*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getDayOfWeekNum(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的年，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getYear(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的月，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMonth(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的日，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getDay(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的小时，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getHour(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 返回指定日期的分钟，若日期为空则返回-1 */</p>\r\n<p style=\"padding-left: 60px;\">public static int getMinute(Date date)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 从身份证中提取出生日期</p>\r\n<p style=\"padding-left: 60px;\">*</p>\r\n<p style=\"padding-left: 60px;\">* @return yyyy-MM-dd,不满足15或18位,返回空</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static String getBirthdayFromIdNo(String idNo)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 将月份的英文缩写转成相应的int型，供Calendar、Date等日期类型使用</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static int parseMonth(String monthStr)</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* @param dayofmonth 当前月的某天</p>\r\n<p style=\"padding-left: 60px;\">* 返回yyyy-MM-dd格式的日期</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static String getYYYY_mm_ddByDayOfMonth(String dayofmonth)</p>\r\n<p style=\"padding-left: 60px;\">/**@param dayofyear 当前年的某一天 &nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* 返回yyyy-MM-dd格式的日期</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static String getYYYY_mm_ddByDayOfYear(String dayofyear)</p>\r\n<p style=\"padding-left: 60px;\">/**指定年月日的某一天 &nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* 返回yyyy-MM-dd格式的日期</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static String getYYYY_mm_ddByDayOfYear_month_day(int year,int month,int dayofyear)</p>\r\n</body>\r\n</html>', 'JAVA;凯亚;DATE;');
INSERT INTO `info_history` VALUES ('2', '0', 'lswu', '2013-10-17 09:05:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2>check包</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.check.CheckUtil 判断工具类，该类工具用于校验、判断、比对等</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/** 判断字符串是否为空 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isNull(String value)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断日期变量是否为空 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isNull(Date date)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是数字或者 \".\" , \"-\" */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isDigital(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是数字或者 \".\" , \"-\"组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isDigitalString(String value)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是数字0-9 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isInt(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是数字0-9组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isIntString(String value)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是字母 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlpha(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符是否是数字或者字符 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlphaOrDigital(char c)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是数字或者字符组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlphaOrDigital(String value)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 判断一个字符串是否全部是字符组成 */</p>\r\n<p style=\"padding-left: 60px;\">public static boolean isAlphaString(String value)</p>\r\n<p>&nbsp;</p>\r\n</body>\r\n</html>', 'JAVA;CHECK;');
INSERT INTO `info_history` VALUES ('3', '0', 'lswu', '2013-10-17 09:14:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">etermagent</h2>\r\n<ul>\r\n<li>org.orange.etermagent.TerminalManager</li>\r\n</ul>\r\n</body>\r\n</html>', 'JAVA;ETERM;');
INSERT INTO `info_history` VALUES ('3', '1', 'lswu', '2013-10-17 09:46:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">etermagent</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.etermagent.TerminalManager 配置管理类</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**获取配置缓冲map**/</p>\r\n<p style=\"padding-left: 60px;\">public synchronized static Map&lt;String, TerminalConfig&gt; get_terminalconfigMap()</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**通过配置的账户释放配置类**/</p>\r\n<p style=\"padding-left: 60px;\">public synchronized static void releaseTerminalConfig(String account)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**获取可用的配置 &nbsp;**/</p>\r\n<p style=\"padding-left: 60px;\">public static TerminalConfig getTerminalConfig()</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**通过类型获取可用的配置 **/</p>\r\n<p style=\"padding-left: 60px;\">public static TerminalConfig getTerminalConfigByType(String type)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**通过配置账号获取可用的配置 **/</p>\r\n<p style=\"padding-left: 60px;\">public static TerminalConfig getTerminalConfigByAccount(String account)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h3>org.orange.etermagent.Terminal 配置执行类</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**执行指令，自动翻页**/</p>\r\n<p style=\"padding-left: 60px;\">public String cmdResult(String cmd)</p>\r\n<p>&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h3>org.orange.etermagent.TerminalConfig 配置对象类</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**获取配置的使用情况**/</p>\r\n<p style=\"padding-left: 60px;\">public boolean getIdle()&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**设置配置为空闲，同时写入最后操作时间**/</p>\r\n<p style=\"padding-left: 60px;\">public void setIdle(boolean p_idle)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<ul>\r\n<li>\r\n<h2>一般的使用方法</h2>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 30px;\">{</p>\r\n<p style=\"padding-left: 60px;\">//通过类型获取空闲配置</p>\r\n<p style=\"padding-left: 60px;\">TerminalConfig config = TerminalManager.getTerminalConfigByType(\"NM\");</p>\r\n<p style=\"padding-left: 60px;\">/*生成连接socket*/</p>\r\n<p style=\"padding-left: 60px;\">Terminal t = new Terminal(config);</p>\r\n<p style=\"padding-left: 60px;\">if(!t.isValid())return;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/*执行指令 */</p>\r\n<p style=\"padding-left: 60px;\">t.cmdResult(\"RT\");</p>\r\n<p style=\"padding-left: 60px;\">/*释放配置 */</p>\r\n<p style=\"padding-left: 60px;\">TerminalManager.releaseTerminalConfig(config.ETERM_ACCOUNT);</p>\r\n<p style=\"padding-left: 60px;\">/*关闭执行类*/</p>\r\n<p style=\"padding-left: 60px;\">t.close();</p>\r\n<p style=\"padding-left: 30px;\">}</p>\r\n</body>\r\n</html>', 'JAVA;ETERM;ETERMAGENT;');
INSERT INTO `info_history` VALUES ('4', '0', 'lswu', '2013-10-17 10:22:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">Math</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.math.MathUtil</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 浮点数转换成整数，四舍五入&lt;br/&gt;</p>\r\n<p style=\"padding-left: 60px;\">* 55.51-&gt;56 55.490-&gt;55</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double formatPrice(double price)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供（相对）精确的除法运算。当发生除不尽的情况时，由scale参数指 定精度，以后的数字四舍五入。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @param v1</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;被除数</p>\r\n<p style=\"padding-left: 60px;\">* @param v2</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;除数</p>\r\n<p style=\"padding-left: 60px;\">* @param scale</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;表示表示需要精确到小数点以后几位。</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的商</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleDiv(double v1, double v2, int scale)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供精确的乘法运算。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @param v1</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;被乘数</p>\r\n<p style=\"padding-left: 60px;\">* @param v2</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;乘数</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的积</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleMul(double v1, double v2)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供精确的减法运算。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @param v1</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;被减数</p>\r\n<p style=\"padding-left: 60px;\">* @param v2</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;减数</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的差</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleSubtract(double v1, double v2)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 提供精确的加法运算。</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @return 两个参数的和</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static double doubleAdd(double v1, double v2)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**浮点数以5为单位向上靠&lt;br/&gt;</p>\r\n<p style=\"padding-left: 60px;\">* 50.01-&gt;55，50.49-&gt;55，55.01-&gt;60</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* @return 上靠的5的倍数</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public static long doubleToUpperLong(double d1)&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**差值进位算法&lt;br/&gt;</p>\r\n<p style=\"padding-left: 60px;\">*&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">* 3&lt; x &lt;7，则x进5 &lt;br/&gt;</p>\r\n<p style=\"padding-left: 60px;\">* x &lt; 3，则x进0 &lt;br/&gt;</p>\r\n<p style=\"padding-left: 60px;\">* x &gt; 7，则x进10</p>\r\n<p style=\"padding-left: 60px;\">* **/</p>\r\n<p style=\"padding-left: 60px;\">public static long longToFive(long l1)&nbsp;</p>\r\n</body>\r\n</html>', 'JAVA;MATH;');
INSERT INTO `info_history` VALUES ('5', '0', 'lswu', '2013-10-17 10:28:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<h2 style=\"padding-left: 30px;\">property</h2>\r\n<ul>\r\n<li>\r\n<h3>org.orange.property.LocalPropertyUtil &nbsp; &nbsp;控制jar当前文件夹下的配置文件</h3>\r\n</li>\r\n<li>\r\n<h3>org.orange.property.UserFolderPropertyUtil &nbsp; &nbsp;控制用户目录下文件夹内的配置文件，默认路径user.home/orange.config/</h3>\r\n</li>\r\n</ul>\r\n<p style=\"padding-left: 60px;\">/**获得刷新时间**/</p>\r\n<p style=\"padding-left: 60px;\">public Long getConfigRefreshTime(String configFileName,long refreshTime)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 获取配置文件的配置项*/</p>\r\n<p style=\"padding-left: 60px;\">public String getProperty(String configFileName,String paramString) throws OperatePropertyException</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**</p>\r\n<p style=\"padding-left: 60px;\">* 从配置文件缓存中去除对该配置文件的维护</p>\r\n<p style=\"padding-left: 60px;\">*/</p>\r\n<p style=\"padding-left: 60px;\">public void releaseConfig(String configFileName)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/** 设置配置文件的刷新时间,时间单位ms&lt;br/&gt;</p>\r\n<p style=\"padding-left: 60px;\">* &nbsp;设置刷新时间后，该配置文件会立刻刷新</p>\r\n<p style=\"padding-left: 60px;\">* */</p>\r\n<p style=\"padding-left: 60px;\">public void setConfigRefreshTime(String configFileName,long refreshTime)</p>\r\n<p style=\"padding-left: 60px;\">&nbsp;</p>\r\n<p style=\"padding-left: 60px;\">/**写操作配置项**/</p>\r\n<p style=\"padding-left: 60px;\">public void writeProperty(String configFileName, String key, String value) {</p>\r\n</body>\r\n</html>', 'JAVA;PROPERTY;配置文件;');
INSERT INTO `info_history` VALUES ('9', '0', 'lswu', '2013-10-17 16:39:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<table style=\"height: 1932px;\" width=\"1100\"><colgroup><col width=\"181\" /> <col width=\"514\" /> <col width=\"549\" /> </colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/attributes/\">Attributes</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Runtime&nbsp;API&nbsp;to&nbsp;metadata&nbsp;attributes&nbsp;such&nbsp;as&nbsp;doclet&nbsp;tags.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">运行时API&nbsp;doclet的标签，如元数据属性。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/bcel/\">BCEL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Byte&nbsp;Code&nbsp;Engineering&nbsp;Library&nbsp;-&nbsp;analyze,&nbsp;create,&nbsp;and&nbsp;manipulate&nbsp;Java&nbsp;class&nbsp;files</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">字节代码工程库&nbsp;-&nbsp;分析，创建和操作Java类文件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/beanutils/\">BeanUtils</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Easy-to-use&nbsp;wrappers&nbsp;around&nbsp;the&nbsp;Java&nbsp;reflection&nbsp;and&nbsp;introspection&nbsp;APIs.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">基于Java&nbsp;reflection&nbsp;和introspection&nbsp;APIs，易于使用的包装类工具包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/betwixt/\">Betwixt</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Services&nbsp;for&nbsp;mapping&nbsp;JavaBeans&nbsp;to&nbsp;XML&nbsp;documents,&nbsp;and&nbsp;vice&nbsp;versa.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">javabean和xml文档中相互转换的包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/bsf/\">BSF</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Bean&nbsp;Scripting&nbsp;Framework&nbsp;-&nbsp;interface&nbsp;to&nbsp;scripting&nbsp;languages,&nbsp;including&nbsp;JSR-223</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Bean脚本框架&nbsp;-&nbsp;脚本语言的接口，包括JSR-223</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/chain/\">Chain</a></td>\r\n<td class=\"et7\" width=\"514\" height=\"20\">Chain&nbsp;of&nbsp;Responsibility<span class=\"font1\">&nbsp;</span><span class=\"font1\">pattern&nbsp;implemention.</span></td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">责任链模式的实现包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/cli/\">CLI</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Command&nbsp;Line&nbsp;arguments&nbsp;parser.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">命令行参数解析器。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/codec/\">Codec</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">General&nbsp;encoding/decoding&nbsp;algorithms&nbsp;(for&nbsp;example&nbsp;phonetic,&nbsp;base64,&nbsp;URL).</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">通用编码/解码算法（例如语音，base64编码，URL）。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/collections/\">Collections</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Extends&nbsp;or&nbsp;augments&nbsp;the&nbsp;Java&nbsp;Collections&nbsp;Framework.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">扩展或扩充Java集合框架。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/compress/\">Compress</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Defines&nbsp;an&nbsp;API&nbsp;for&nbsp;working&nbsp;with&nbsp;tar,&nbsp;zip&nbsp;and&nbsp;bzip2&nbsp;files.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">一组为处理tar.zip.bzips等文件而定义的API</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/configuration/\">Configuration</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Reading&nbsp;of&nbsp;configuration/preferences&nbsp;files&nbsp;in&nbsp;various&nbsp;formats.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">读取配置/偏好文件，可用于各种格式。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/csv/\">CSV</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Component&nbsp;for&nbsp;reading&nbsp;and&nbsp;writing&nbsp;comma&nbsp;separated&nbsp;value&nbsp;files.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于读写csv文件的一组组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/daemon/\">Daemon</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Alternative&nbsp;invocation&nbsp;mechanism&nbsp;for&nbsp;unix-daemon-like&nbsp;java&nbsp;code.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Commons&nbsp;Daemon&nbsp;可以帮你实现将一个普通的&nbsp;Java&nbsp;应用变成系统的一个后台服务。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/dbcp/\">DBCP</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Database&nbsp;connection&nbsp;pooling&nbsp;services.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">提供数据库连接缓冲服务</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/dbutils/\">DbUtils</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">JDBC&nbsp;helper&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">JDBC的扩充、辅助库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/digester/\">Digester</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">XML-to-Java-object&nbsp;mapping&nbsp;utility.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">XML映射Java的实现组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/discovery/\">Discovery</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Tools&nbsp;for&nbsp;locating&nbsp;resources&nbsp;by&nbsp;mapping&nbsp;service/reference&nbsp;names&nbsp;to&nbsp;resource&nbsp;names.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">资源名称映射服务/引用名称定位资源的工具。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/el/\">EL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Interpreter&nbsp;for&nbsp;the&nbsp;Expression&nbsp;Language&nbsp;defined&nbsp;by&nbsp;the&nbsp;JSP&nbsp;2.0&nbsp;specification.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">一个用来解析&nbsp;JSP&nbsp;2.0&nbsp;的表达式语言的&nbsp;Java&nbsp;类库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/email/\">Email</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Library&nbsp;for&nbsp;sending&nbsp;e-mail&nbsp;from&nbsp;Java.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">发送邮件的库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/exec/\">Exec</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">API&nbsp;for&nbsp;dealing&nbsp;with&nbsp;external&nbsp;process&nbsp;execution&nbsp;and&nbsp;environment&nbsp;management&nbsp;in&nbsp;Java.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于处理外部进程执行和环境管理的API组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/fileupload/\">FileUpload</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">File&nbsp;upload&nbsp;capability&nbsp;for&nbsp;your&nbsp;servlets&nbsp;and&nbsp;web&nbsp;applications.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">为web应用提供上传文件功能的支持</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/functor/\">Functor</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">A&nbsp;functor&nbsp;is&nbsp;a&nbsp;function&nbsp;that&nbsp;can&nbsp;be&nbsp;manipulated&nbsp;as&nbsp;an&nbsp;object,&nbsp;or&nbsp;an&nbsp;object&nbsp;representing&nbsp;a&nbsp;single,&nbsp;generic&nbsp;function.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">&nbsp;Functor&nbsp;库包括大量基本构造，可以在涉及闭包和高阶函数的复杂使用场景中重复使用。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/imaging/\">Imaging&nbsp;(previously&nbsp;called&nbsp;Sanselan)</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">A&nbsp;pure-Java&nbsp;image&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">纯Java的图像库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/io/\">IO</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Collection&nbsp;of&nbsp;I/O&nbsp;utilities.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">IO相关的集合</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/jci/\">JCI</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Java&nbsp;Compiler&nbsp;Interface</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">是一个封装了&nbsp;Java&nbsp;编译器的类库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"57\"><a href=\"http://commons.apache.org/jcs/\">JCS</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"57\">Java&nbsp;Caching&nbsp;System</td>\r\n<td class=\"et10\" width=\"549\" height=\"57\">它是复合式的缓冲工具，具有配置灵活的特点。JCS提供内存、硬盘、分布式架构、构建缓存服务器四种方式来实现对象缓存；能够很方便的实现缓存的差异化定制。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"38\"><a href=\"http://commons.apache.org/jelly/\">Jelly</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"38\">XML&nbsp;based&nbsp;scripting&nbsp;and&nbsp;processing&nbsp;engine.</td>\r\n<td class=\"et10\" width=\"549\" height=\"38\">Jelly是一个基于XML与Java的脚本和处理引擎，Jelly借鉴了JSP定指标签，能够把XML转换成可执行代码。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/jexl/\">Jexl</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Expression&nbsp;language&nbsp;which&nbsp;extends&nbsp;the&nbsp;Expression&nbsp;Language&nbsp;of&nbsp;the&nbsp;JSTL.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Jexl是一个表达式语言，通过借鉴来自于Velocity的经验扩展了JSTL定义的表达式语言。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"38\"><a href=\"http://commons.apache.org/jxpath/\">JXPath</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"38\">Utilities&nbsp;for&nbsp;manipulating&nbsp;Java&nbsp;Beans&nbsp;using&nbsp;the&nbsp;XPath&nbsp;syntax.</td>\r\n<td class=\"et10\" width=\"549\" height=\"38\">定义了一个简单的XPath表达式语言的解析器.JXPath应用XPath表达式来操纵各种类型的对象包括:JavaBeans,Maps,Servlet&nbsp;contexts,DOM等.</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/lang/\">Lang</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Provides&nbsp;extra&nbsp;functionality&nbsp;for&nbsp;classes&nbsp;in&nbsp;java.lang.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">扩展java.lang包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/launcher/\">Launcher</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Cross&nbsp;platform&nbsp;Java&nbsp;application&nbsp;launcher.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">跨平台的Java应用程序启动库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/logging/\">Logging</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Wrapper&nbsp;around&nbsp;a&nbsp;variety&nbsp;of&nbsp;logging&nbsp;API&nbsp;implementations.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">基于logging&nbsp;API&nbsp;的日志包装库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/math/\">Math</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Lightweight,&nbsp;self-contained&nbsp;mathematics&nbsp;and&nbsp;statistics&nbsp;components.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">轻量级的数学组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/modeler/\">Modeler</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Mechanisms&nbsp;to&nbsp;create&nbsp;Model&nbsp;MBeans&nbsp;compatible&nbsp;with&nbsp;JMX&nbsp;specification.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于创建基于&nbsp;JMX&nbsp;规范的MBeans模型的工具。可参考http://www.ibm.com/developerworks/cn/java/l-jmx/index.html</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/net/\">Net</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Collection&nbsp;of&nbsp;network&nbsp;utilities&nbsp;and&nbsp;protocol&nbsp;implementations.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">网络应用和协议实现的组件集合</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"57\"><a href=\"http://commons.apache.org/ognl/\">OGNL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"57\">An&nbsp;Object-Graph&nbsp;Navigation&nbsp;Language</td>\r\n<td class=\"et10\" width=\"549\" height=\"57\">Object&nbsp;Graph&nbsp;Navigation&nbsp;Language的缩写，与JSP，JSF相比，OGNL是一种功能非常强大的针对Java的表达式语言（EL），它可用来读取和更新Java对象的属性。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/pool/\">Pool</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Generic&nbsp;object&nbsp;pooling&nbsp;component.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">通用对象池组件，像JDBC和tomcat就是基于此</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/primitives/\">Primitives</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Smaller,&nbsp;faster&nbsp;and&nbsp;easier&nbsp;to&nbsp;work&nbsp;with&nbsp;types&nbsp;supporting&nbsp;Java&nbsp;primitive&nbsp;types.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">提供了一个更小，更快和更易使用的对Java基本类型的支持。当前主要是针对基本类型的&nbsp;collection。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/proxy/\">Proxy</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Library&nbsp;for&nbsp;creating&nbsp;dynamic&nbsp;proxies.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">动态代理支持库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/imaging\">Sanselan&nbsp;(now&nbsp;called&nbsp;Imaging)</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">A&nbsp;pure-Java&nbsp;image&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">纯Java的图像库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"100\"><a href=\"http://commons.apache.org/scxml/\">SCXML</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"100\">An&nbsp;implementation&nbsp;of&nbsp;the&nbsp;State&nbsp;Chart&nbsp;XML&nbsp;specification&nbsp;aimed&nbsp;at&nbsp;creating&nbsp;and&nbsp;maintaining&nbsp;a&nbsp;Java&nbsp;SCXML&nbsp;engine.&nbsp;It&nbsp;is&nbsp;capable&nbsp;of&nbsp;executing&nbsp;a&nbsp;state&nbsp;machine&nbsp;defined&nbsp;using&nbsp;a&nbsp;SCXML&nbsp;document,&nbsp;and&nbsp;abstracts&nbsp;out&nbsp;the&nbsp;environment&nbsp;interfaces.</td>\r\n<td class=\"et10\" width=\"549\" height=\"100\">有限状态机的实现，旨在建立和维护一个Java&nbsp;SCXML引擎。使用SCXML文档定义执行一个状态机，它能够抽象出环境接口。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/transaction/\">Transaction</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Implementations&nbsp;for&nbsp;multi&nbsp;level&nbsp;locks,&nbsp;transactional&nbsp;collections&nbsp;and&nbsp;transactional&nbsp;file&nbsp;access.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Commons&nbsp;Transaction&nbsp;旨在提供一个轻量级、标准化、高效的&nbsp;Java&nbsp;事务多线程编程的工具包，实现了多级锁、事务集合和事务级文件访问。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/validator/\">Validator</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Framework&nbsp;to&nbsp;define&nbsp;validators&nbsp;and&nbsp;validation&nbsp;rules&nbsp;in&nbsp;an&nbsp;xml&nbsp;file.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">通用验证系统，主要用于web应用，定义验证和验证规则XML的框架包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"247\"><a href=\"http://commons.apache.org/vfs/\">VFS</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"247\">Virtual&nbsp;File&nbsp;System&nbsp;component&nbsp;for&nbsp;treating&nbsp;files,&nbsp;FTP,&nbsp;SMB,&nbsp;ZIP&nbsp;and&nbsp;such&nbsp;like&nbsp;as&nbsp;a&nbsp;single&nbsp;logical&nbsp;file&nbsp;system.</td>\r\n<td class=\"et10\" width=\"549\" height=\"247\">VFS把对各种各样的的文件系统的访问封装成统一的应用程序接口，这大大的简化了应用程序本身代码的复杂度。Apache上的项目的稳定性也是有目共睹的，目前VFS支持下面一些文件系统，当然你也可以自行进行扩展。<br /><br />FTP<br />Local&nbsp;Files<br />HTTP&nbsp;and&nbsp;HTTPS<br />SFTP<br />Temporary&nbsp;Files<br />Zip,&nbsp;Jar&nbsp;and&nbsp;Tar&nbsp;(uncompressed,&nbsp;tgz&nbsp;or&nbsp;tbz2)<br />gzip&nbsp;and&nbsp;bzip2<br />res<br />ram</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</body>\r\n</html>', 'JAVA;COMMONS;');
INSERT INTO `info_history` VALUES ('9', '1', 'lswu', '2013-10-17 16:50:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<table style=\"height: 1932px;\" width=\"1100\"><colgroup><col width=\"181\" /> <col width=\"514\" /> <col width=\"549\" /> </colgroup>\r\n<tbody>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/attributes/\">Attributes</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Runtime&nbsp;API&nbsp;to&nbsp;metadata&nbsp;attributes&nbsp;such&nbsp;as&nbsp;doclet&nbsp;tags.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">运行时API&nbsp;doclet的标签，如元数据属性。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/bcel/\">BCEL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Byte&nbsp;Code&nbsp;Engineering&nbsp;Library&nbsp;-&nbsp;analyze,&nbsp;create,&nbsp;and&nbsp;manipulate&nbsp;Java&nbsp;class&nbsp;files</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">字节代码工程库&nbsp;-&nbsp;分析，创建和操作Java类文件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/beanutils/\">BeanUtils</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Easy-to-use&nbsp;wrappers&nbsp;around&nbsp;the&nbsp;Java&nbsp;reflection&nbsp;and&nbsp;introspection&nbsp;APIs.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">基于Java&nbsp;reflection&nbsp;和introspection&nbsp;APIs，易于使用的包装类工具包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/betwixt/\">Betwixt</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Services&nbsp;for&nbsp;mapping&nbsp;JavaBeans&nbsp;to&nbsp;XML&nbsp;documents,&nbsp;and&nbsp;vice&nbsp;versa.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">javabean和xml文档中相互转换的包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/bsf/\">BSF</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Bean&nbsp;Scripting&nbsp;Framework&nbsp;-&nbsp;interface&nbsp;to&nbsp;scripting&nbsp;languages,&nbsp;including&nbsp;JSR-223</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Bean脚本框架&nbsp;-&nbsp;脚本语言的接口，包括JSR-223</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/chain/\">Chain</a></td>\r\n<td class=\"et7\" width=\"514\" height=\"20\">Chain&nbsp;of&nbsp;Responsibility<span class=\"font1\">&nbsp;</span><span class=\"font1\">pattern&nbsp;implemention.</span></td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">责任链模式的实现包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/cli/\">CLI</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Command&nbsp;Line&nbsp;arguments&nbsp;parser.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">命令行参数解析器。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/codec/\">Codec</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">General&nbsp;encoding/decoding&nbsp;algorithms&nbsp;(for&nbsp;example&nbsp;phonetic,&nbsp;base64,&nbsp;URL).</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">通用编码/解码算法（例如语音，base64编码，URL）。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/collections/\">Collections</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Extends&nbsp;or&nbsp;augments&nbsp;the&nbsp;Java&nbsp;Collections&nbsp;Framework.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">扩展或扩充Java集合框架。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/compress/\">Compress</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Defines&nbsp;an&nbsp;API&nbsp;for&nbsp;working&nbsp;with&nbsp;tar,&nbsp;zip&nbsp;and&nbsp;bzip2&nbsp;files.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">一组为处理tar.zip.bzips等文件而定义的API</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/configuration/\">Configuration</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Reading&nbsp;of&nbsp;configuration/preferences&nbsp;files&nbsp;in&nbsp;various&nbsp;formats.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">读取配置/偏好文件，可用于各种格式。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/csv/\">CSV</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Component&nbsp;for&nbsp;reading&nbsp;and&nbsp;writing&nbsp;comma&nbsp;separated&nbsp;value&nbsp;files.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于读写csv文件的一组组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/daemon/\">Daemon</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Alternative&nbsp;invocation&nbsp;mechanism&nbsp;for&nbsp;unix-daemon-like&nbsp;java&nbsp;code.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Commons&nbsp;Daemon&nbsp;可以帮你实现将一个普通的&nbsp;Java&nbsp;应用变成系统的一个后台服务。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/dbcp/\">DBCP</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Database&nbsp;connection&nbsp;pooling&nbsp;services.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">提供数据库连接缓冲服务</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/dbutils/\">DbUtils</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">JDBC&nbsp;helper&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">JDBC的扩充、辅助库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/digester/\">Digester</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">XML-to-Java-object&nbsp;mapping&nbsp;utility.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">XML映射Java的实现组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/discovery/\">Discovery</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Tools&nbsp;for&nbsp;locating&nbsp;resources&nbsp;by&nbsp;mapping&nbsp;service/reference&nbsp;names&nbsp;to&nbsp;resource&nbsp;names.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">资源名称映射服务/引用名称定位资源的工具。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/el/\">EL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Interpreter&nbsp;for&nbsp;the&nbsp;Expression&nbsp;Language&nbsp;defined&nbsp;by&nbsp;the&nbsp;JSP&nbsp;2.0&nbsp;specification.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">一个用来解析&nbsp;JSP&nbsp;2.0&nbsp;的表达式语言的&nbsp;Java&nbsp;类库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/email/\">Email</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Library&nbsp;for&nbsp;sending&nbsp;e-mail&nbsp;from&nbsp;Java.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">发送邮件的库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/exec/\">Exec</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">API&nbsp;for&nbsp;dealing&nbsp;with&nbsp;external&nbsp;process&nbsp;execution&nbsp;and&nbsp;environment&nbsp;management&nbsp;in&nbsp;Java.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于处理外部进程执行和环境管理的API组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/fileupload/\">FileUpload</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">File&nbsp;upload&nbsp;capability&nbsp;for&nbsp;your&nbsp;servlets&nbsp;and&nbsp;web&nbsp;applications.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">为web应用提供上传文件功能的支持</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/functor/\">Functor</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">A&nbsp;functor&nbsp;is&nbsp;a&nbsp;function&nbsp;that&nbsp;can&nbsp;be&nbsp;manipulated&nbsp;as&nbsp;an&nbsp;object,&nbsp;or&nbsp;an&nbsp;object&nbsp;representing&nbsp;a&nbsp;single,&nbsp;generic&nbsp;function.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">&nbsp;Functor&nbsp;库包括大量基本构造，可以在涉及闭包和高阶函数的复杂使用场景中重复使用。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/imaging/\">Imaging&nbsp;(previously&nbsp;called&nbsp;Sanselan)</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">A&nbsp;pure-Java&nbsp;image&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">纯Java的图像库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/io/\">IO</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Collection&nbsp;of&nbsp;I/O&nbsp;utilities.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">IO相关的集合</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/jci/\">JCI</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Java&nbsp;Compiler&nbsp;Interface</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">是一个封装了&nbsp;Java&nbsp;编译器的类库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"57\"><a href=\"http://commons.apache.org/jcs/\">JCS</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"57\">Java&nbsp;Caching&nbsp;System</td>\r\n<td class=\"et10\" width=\"549\" height=\"57\">它是复合式的缓冲工具，具有配置灵活的特点。JCS提供内存、硬盘、分布式架构、构建缓存服务器四种方式来实现对象缓存；能够很方便的实现缓存的差异化定制。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"38\"><a href=\"http://commons.apache.org/jelly/\">Jelly</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"38\">XML&nbsp;based&nbsp;scripting&nbsp;and&nbsp;processing&nbsp;engine.</td>\r\n<td class=\"et10\" width=\"549\" height=\"38\">Jelly是一个基于XML与Java的脚本和处理引擎，Jelly借鉴了JSP定指标签，能够把XML转换成可执行代码。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/jexl/\">Jexl</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Expression&nbsp;language&nbsp;which&nbsp;extends&nbsp;the&nbsp;Expression&nbsp;Language&nbsp;of&nbsp;the&nbsp;JSTL.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Jexl是一个表达式语言，通过借鉴来自于Velocity的经验扩展了JSTL定义的表达式语言。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"38\"><a href=\"http://commons.apache.org/jxpath/\">JXPath</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"38\">Utilities&nbsp;for&nbsp;manipulating&nbsp;Java&nbsp;Beans&nbsp;using&nbsp;the&nbsp;XPath&nbsp;syntax.</td>\r\n<td class=\"et10\" width=\"549\" height=\"38\">定义了一个简单的XPath表达式语言的解析器.JXPath应用XPath表达式来操纵各种类型的对象包括:JavaBeans,Maps,Servlet&nbsp;contexts,DOM等.</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/lang/\">Lang</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Provides&nbsp;extra&nbsp;functionality&nbsp;for&nbsp;classes&nbsp;in&nbsp;java.lang.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">扩展java.lang包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/launcher/\">Launcher</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Cross&nbsp;platform&nbsp;Java&nbsp;application&nbsp;launcher.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">跨平台的Java应用程序启动库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/logging/\">Logging</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"20\">Wrapper&nbsp;around&nbsp;a&nbsp;variety&nbsp;of&nbsp;logging&nbsp;API&nbsp;implementations.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">基于logging&nbsp;API&nbsp;的日志包装库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/math/\">Math</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Lightweight,&nbsp;self-contained&nbsp;mathematics&nbsp;and&nbsp;statistics&nbsp;components.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">轻量级的数学组件</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/modeler/\">Modeler</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Mechanisms&nbsp;to&nbsp;create&nbsp;Model&nbsp;MBeans&nbsp;compatible&nbsp;with&nbsp;JMX&nbsp;specification.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">用于创建基于&nbsp;JMX&nbsp;规范的MBeans模型的工具。可参考http://www.ibm.com/developerworks/cn/java/l-jmx/index.html</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/net/\">Net</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Collection&nbsp;of&nbsp;network&nbsp;utilities&nbsp;and&nbsp;protocol&nbsp;implementations.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">网络应用和协议实现的组件集合</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"57\"><a href=\"http://commons.apache.org/ognl/\">OGNL</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"57\">An&nbsp;Object-Graph&nbsp;Navigation&nbsp;Language</td>\r\n<td class=\"et10\" width=\"549\" height=\"57\">Object&nbsp;Graph&nbsp;Navigation&nbsp;Language的缩写，与JSP，JSF相比，OGNL是一种功能非常强大的针对Java的表达式语言（EL），它可用来读取和更新Java对象的属性。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/pool/\">Pool</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Generic&nbsp;object&nbsp;pooling&nbsp;component.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">通用对象池组件，像JDBC和tomcat就是基于此</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/primitives/\">Primitives</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Smaller,&nbsp;faster&nbsp;and&nbsp;easier&nbsp;to&nbsp;work&nbsp;with&nbsp;types&nbsp;supporting&nbsp;Java&nbsp;primitive&nbsp;types.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">提供了一个更小，更快和更易使用的对Java基本类型的支持。当前主要是针对基本类型的&nbsp;collection。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"20\"><a href=\"http://commons.apache.org/proxy/\">Proxy</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"20\">Library&nbsp;for&nbsp;creating&nbsp;dynamic&nbsp;proxies.</td>\r\n<td class=\"et10\" width=\"549\" height=\"20\">动态代理支持库</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/imaging\">Sanselan&nbsp;(now&nbsp;called&nbsp;Imaging)</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">A&nbsp;pure-Java&nbsp;image&nbsp;library.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">纯Java的图像库。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"100\"><a href=\"http://commons.apache.org/scxml/\">SCXML</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"100\">An&nbsp;implementation&nbsp;of&nbsp;the&nbsp;State&nbsp;Chart&nbsp;XML&nbsp;specification&nbsp;aimed&nbsp;at&nbsp;creating&nbsp;and&nbsp;maintaining&nbsp;a&nbsp;Java&nbsp;SCXML&nbsp;engine.&nbsp;It&nbsp;is&nbsp;capable&nbsp;of&nbsp;executing&nbsp;a&nbsp;state&nbsp;machine&nbsp;defined&nbsp;using&nbsp;a&nbsp;SCXML&nbsp;document,&nbsp;and&nbsp;abstracts&nbsp;out&nbsp;the&nbsp;environment&nbsp;interfaces.</td>\r\n<td class=\"et10\" width=\"549\" height=\"100\">有限状态机的实现，旨在建立和维护一个Java&nbsp;SCXML引擎。使用SCXML文档定义执行一个状态机，它能够抽象出环境接口。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/transaction/\">Transaction</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"40\">Implementations&nbsp;for&nbsp;multi&nbsp;level&nbsp;locks,&nbsp;transactional&nbsp;collections&nbsp;and&nbsp;transactional&nbsp;file&nbsp;access.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">Commons&nbsp;Transaction&nbsp;旨在提供一个轻量级、标准化、高效的&nbsp;Java&nbsp;事务多线程编程的工具包，实现了多级锁、事务集合和事务级文件访问。</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et6\" width=\"181\" height=\"40\"><a href=\"http://commons.apache.org/validator/\">Validator</a></td>\r\n<td class=\"et5\" width=\"514\" height=\"40\">Framework&nbsp;to&nbsp;define&nbsp;validators&nbsp;and&nbsp;validation&nbsp;rules&nbsp;in&nbsp;an&nbsp;xml&nbsp;file.</td>\r\n<td class=\"et10\" width=\"549\" height=\"40\">通用验证系统，主要用于web应用，定义验证和验证规则XML的框架包</td>\r\n</tr>\r\n<tr>\r\n<td class=\"et4\" width=\"181\" height=\"247\"><a href=\"http://commons.apache.org/vfs/\">VFS</a></td>\r\n<td class=\"et3\" width=\"514\" height=\"247\">Virtual&nbsp;File&nbsp;System&nbsp;component&nbsp;for&nbsp;treating&nbsp;files,&nbsp;FTP,&nbsp;SMB,&nbsp;ZIP&nbsp;and&nbsp;such&nbsp;like&nbsp;as&nbsp;a&nbsp;single&nbsp;logical&nbsp;file&nbsp;system.</td>\r\n<td class=\"et10\" width=\"549\" height=\"247\">VFS把对各种各样的的文件系统的访问封装成统一的应用程序接口，这大大的简化了应用程序本身代码的复杂度。Apache上的项目的稳定性也是有目共睹的，目前VFS支持下面一些文件系统，当然你也可以自行进行扩展。<br /><br />FTP<br />Local&nbsp;Files<br />HTTP&nbsp;and&nbsp;HTTPS<br />SFTP<br />Temporary&nbsp;Files<br />Zip,&nbsp;Jar&nbsp;and&nbsp;Tar&nbsp;(uncompressed,&nbsp;tgz&nbsp;or&nbsp;tbz2)<br />gzip&nbsp;and&nbsp;bzip2<br />res<br />ram</td>\r\n</tr>\r\n</tbody>\r\n</table>\r\n</body>\r\n</html>', 'JAVA;COMMONS;');
INSERT INTO `info_history` VALUES ('10', '0', 'lswu', '2013-10-21 16:26:10', '<!DOCTYPE html>\r\n<html>\r\n<head>\r\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\" />\r\n</head>\r\n<body>\r\n<p>打完jar后，需要修改Manifest.mf文件，在class-path中加入引用的包，注意前面的点。</p>\r\n<p>&nbsp;</p>\r\n<p>Manifest-Version: 1.0</p>\r\n<p><strong>Class-Path: . orange-0.1.jar</strong></p>\r\n<p>Main-Class: cc.Test</p>\r\n<p>X</p>\r\n</body>\r\n</html>', 'JAVA;');

-- ----------------------------
-- Table structure for `label`
-- ----------------------------
DROP TABLE IF EXISTS `label`;
CREATE TABLE `label` (
  `name` varchar(200) CHARACTER SET utf8 NOT NULL DEFAULT '',
  `contain_num` int(11) DEFAULT NULL,
  PRIMARY KEY (`name`)
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

-- ----------------------------
-- Records of label
-- ----------------------------
INSERT INTO `label` VALUES ('CHECK', '2');
INSERT INTO `label` VALUES ('COMMONS', '3');
INSERT INTO `label` VALUES ('COPY', '1');
INSERT INTO `label` VALUES ('DATE', '4');
INSERT INTO `label` VALUES ('ETERM', '3');
INSERT INTO `label` VALUES ('ETERMAGENT', '2');
INSERT INTO `label` VALUES ('JAR', '1');
INSERT INTO `label` VALUES ('JAVA', '22');
INSERT INTO `label` VALUES ('MATH', '2');
INSERT INTO `label` VALUES ('PROPERTY', '2');
INSERT INTO `label` VALUES ('XML', '1');
INSERT INTO `label` VALUES ('凯亚', '4');
INSERT INTO `label` VALUES ('配置文件', '2');

-- ----------------------------
-- Table structure for `no_info`
-- ----------------------------
DROP TABLE IF EXISTS `no_info`;
CREATE TABLE `no_info` (
  `no_id` int(11) NOT NULL AUTO_INCREMENT,
  `input` varchar(200) DEFAULT NULL,
  `is_do` int(1) DEFAULT '0',
  PRIMARY KEY (`no_id`)
) ENGINE=InnoDB AUTO_INCREMENT=19 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of no_info
-- ----------------------------
INSERT INTO `no_info` VALUES ('1', 'yyyy-MM-dd', '1');
INSERT INTO `no_info` VALUES ('2', 'check', '1');
INSERT INTO `no_info` VALUES ('3', 'etermagent', '1');
INSERT INTO `no_info` VALUES ('4', 'math', '1');
INSERT INTO `no_info` VALUES ('5', 'org.orange.property', '1');
INSERT INTO `no_info` VALUES ('6', 'asdfd', '0');
INSERT INTO `no_info` VALUES ('7', 'Beanutils', '1');
INSERT INTO `no_info` VALUES ('8', '把XML转换成Bean', '0');
INSERT INTO `no_info` VALUES ('9', 'commons简单介绍', '1');
INSERT INTO `no_info` VALUES ('10', 'commons简单介绍', '1');
INSERT INTO `no_info` VALUES ('11', 'commons简单介绍', '1');
INSERT INTO `no_info` VALUES ('12', 'eclipse打包', '0');
INSERT INTO `no_info` VALUES ('13', 'ObjectCopyUtil', '1');
INSERT INTO `no_info` VALUES ('14', 'glzhang', '0');
INSERT INTO `no_info` VALUES ('15', 'glzhang', '0');
INSERT INTO `no_info` VALUES ('16', 'glzhang', '0');
INSERT INTO `no_info` VALUES ('17', 'glzhang', '0');
INSERT INTO `no_info` VALUES ('18', 'tester', '0');

-- ----------------------------
-- Table structure for `study_answer`
-- ----------------------------
DROP TABLE IF EXISTS `study_answer`;
CREATE TABLE `study_answer` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `question_id` int(11) DEFAULT NULL,
  `answer` varchar(1000) DEFAULT NULL,
  `user` varchar(100) DEFAULT NULL COMMENT '工号',
  `study_id` int(11) DEFAULT NULL COMMENT '轮数',
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=278 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of study_answer
-- ----------------------------
INSERT INTO `study_answer` VALUES ('1', '101', 'C', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('2', '102', 'D', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('3', '103', 'A', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('4', '104', 'B', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('5', '105', 'A', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('6', '106', 'C', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('7', '107', 'D', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('8', '108', 'A', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('9', '109', 'D', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('10', '110', 'B', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('11', '111', 'A', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('12', '112', 'B', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('13', '113', 'A', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('14', '114', 'B', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('15', '115', 'D', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('16', '116', 'B', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('17', '117', 'C', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('18', '118', 'D', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('19', '119', 'B', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('20', '120', 'D', 'CHENCHENG', '1');
INSERT INTO `study_answer` VALUES ('61', '101', 'C', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('62', '102', 'D', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('63', '103', 'A', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('64', '104', 'B', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('65', '105', 'B', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('66', '106', 'C', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('67', '107', 'D', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('68', '108', 'ABC', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('69', '109', 'C', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('70', '110', 'ABC', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('71', '111', 'C', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('72', '112', 'A', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('73', '113', 'A', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('74', '114', 'ABC', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('75', '115', 'ABCD', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('76', '116', 'B', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('77', '117', 'B', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('78', '118', 'D', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('79', '119', 'A', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('80', '120', 'E', 'MCWANG', '1');
INSERT INTO `study_answer` VALUES ('81', '101', 'C', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('82', '102', 'D', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('83', '103', 'A', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('84', '104', 'A', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('85', '105', 'B', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('86', '106', 'A', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('87', '107', 'A', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('88', '108', 'ABCD', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('89', '109', 'C', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('90', '110', 'ABC', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('91', '111', 'C', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('92', '112', 'B', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('93', '113', 'D', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('94', '114', 'BC', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('95', '115', 'ABCD', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('96', '116', 'B', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('97', '117', 'C', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('98', '118', 'D', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('99', '119', 'C', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('100', '120', 'D', 'ZHOUWEI1', '1');
INSERT INTO `study_answer` VALUES ('101', '101', 'C', '30116992', '1');
INSERT INTO `study_answer` VALUES ('102', '102', 'C', '30116992', '1');
INSERT INTO `study_answer` VALUES ('103', '103', 'C', '30116992', '1');
INSERT INTO `study_answer` VALUES ('104', '104', 'B', '30116992', '1');
INSERT INTO `study_answer` VALUES ('105', '105', 'A', '30116992', '1');
INSERT INTO `study_answer` VALUES ('106', '106', 'A', '30116992', '1');
INSERT INTO `study_answer` VALUES ('107', '107', 'A', '30116992', '1');
INSERT INTO `study_answer` VALUES ('108', '108', 'ABC', '30116992', '1');
INSERT INTO `study_answer` VALUES ('109', '109', 'D', '30116992', '1');
INSERT INTO `study_answer` VALUES ('110', '110', 'AB', '30116992', '1');
INSERT INTO `study_answer` VALUES ('111', '111', 'C', '30116992', '1');
INSERT INTO `study_answer` VALUES ('112', '112', 'A', '30116992', '1');
INSERT INTO `study_answer` VALUES ('113', '113', 'B', '30116992', '1');
INSERT INTO `study_answer` VALUES ('114', '114', 'AB', '30116992', '1');
INSERT INTO `study_answer` VALUES ('115', '115', 'ABCD', '30116992', '1');
INSERT INTO `study_answer` VALUES ('116', '116', 'B', '30116992', '1');
INSERT INTO `study_answer` VALUES ('117', '117', 'D', '30116992', '1');
INSERT INTO `study_answer` VALUES ('118', '118', 'A', '30116992', '1');
INSERT INTO `study_answer` VALUES ('119', '119', 'B', '30116992', '1');
INSERT INTO `study_answer` VALUES ('120', '120', 'A', '30116992', '1');
INSERT INTO `study_answer` VALUES ('121', '101', 'B', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('122', '102', 'D', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('123', '103', 'A', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('124', '104', 'B', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('125', '105', 'D', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('126', '106', 'B', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('127', '107', 'D', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('128', '108', 'ABCD', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('129', '109', 'B', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('130', '110', 'AB', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('131', '111', 'D', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('132', '112', 'D', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('133', '113', 'A', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('134', '114', 'ABC', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('135', '115', 'ABCD', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('136', '116', 'D', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('137', '117', 'C', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('138', '118', 'C', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('139', '119', 'B', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('140', '120', 'D', 'ZHANGHAO', '1');
INSERT INTO `study_answer` VALUES ('141', '101', 'B', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('142', '102', 'D', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('143', '103', 'A', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('144', '104', 'B', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('145', '105', 'A', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('146', '106', 'B', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('147', '107', 'D', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('148', '108', 'ABCD', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('149', '109', 'A', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('150', '110', 'ABC', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('151', '111', 'D', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('152', '112', 'A', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('153', '113', 'B', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('154', '114', 'ABC', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('155', '115', 'ABCD', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('156', '116', 'A', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('157', '117', 'A', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('158', '118', 'D', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('159', '119', 'A', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('160', '120', 'E', 'GLZHANG', '1');
INSERT INTO `study_answer` VALUES ('161', '101', 'C', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('162', '102', 'D', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('163', '103', 'A', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('164', '104', 'B', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('165', '105', 'A', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('166', '106', 'C', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('167', '107', 'D', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('168', '108', 'ABC', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('169', '109', 'D', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('170', '110', 'AB', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('171', '111', 'D', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('172', '112', 'A', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('173', '113', 'A', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('174', '114', 'ABC', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('175', '115', 'ABCD', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('176', '116', 'C', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('177', '117', 'C', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('178', '118', 'D', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('179', '119', 'B', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('180', '120', 'E', 'TEST', '1');
INSERT INTO `study_answer` VALUES ('181', '101', 'C', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('182', '102', 'D', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('183', '103', 'A', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('184', '104', 'B', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('185', '105', 'D', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('186', '106', 'C', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('187', '107', 'D', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('188', '108', 'ABC', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('189', '109', 'D', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('190', '110', 'AB', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('191', '111', 'C', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('192', '112', 'B', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('193', '113', 'B', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('194', '114', 'AB', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('195', '115', 'AB', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('196', '116', 'C', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('197', '117', 'C', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('198', '118', 'D', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('199', '119', 'B', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('200', '120', 'B', 'LLLI', '1');
INSERT INTO `study_answer` VALUES ('201', '201', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('202', '202', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('203', '203', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('204', '204', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('205', '205', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('206', '206', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('207', '207', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('208', '208', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('209', '209', 'E', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('210', '210', '没有答题', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('211', '211', '没有答题', 'MCWANG', '2');
INSERT INTO `study_answer` VALUES ('212', '201', 'D', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('213', '202', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('214', '203', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('215', '204', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('216', '205', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('217', '206', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('218', '207', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('219', '208', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('220', '209', 'C', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('221', '210', '没有答题', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('222', '211', '没有答题', 'NAME1', '2');
INSERT INTO `study_answer` VALUES ('223', '201', 'D', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('224', '202', 'A', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('225', '203', 'E', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('226', '204', 'A', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('227', '205', 'D', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('228', '206', 'A', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('229', '207', 'D', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('230', '208', 'A', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('231', '209', 'D', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('232', '210', '会议讨论的一些建设性的话题需要落地实现。', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('233', '211', '没有答题', 'TESTER', '2');
INSERT INTO `study_answer` VALUES ('234', '201', 'E', '556', '2');
INSERT INTO `study_answer` VALUES ('235', '202', 'D', '556', '2');
INSERT INTO `study_answer` VALUES ('236', '203', 'D', '556', '2');
INSERT INTO `study_answer` VALUES ('237', '204', 'E', '556', '2');
INSERT INTO `study_answer` VALUES ('238', '205', 'E', '556', '2');
INSERT INTO `study_answer` VALUES ('239', '206', 'C', '556', '2');
INSERT INTO `study_answer` VALUES ('240', '207', 'D', '556', '2');
INSERT INTO `study_answer` VALUES ('241', '208', 'D', '556', '2');
INSERT INTO `study_answer` VALUES ('242', '209', 'E', '556', '2');
INSERT INTO `study_answer` VALUES ('243', '210', '项目在开发过程中，需求很重要', '556', '2');
INSERT INTO `study_answer` VALUES ('244', '211', '实例多一些就更好了，总体很好', '556', '2');
INSERT INTO `study_answer` VALUES ('245', '201', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('246', '202', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('247', '203', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('248', '204', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('249', '205', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('250', '206', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('251', '207', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('252', '208', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('253', '209', 'E', '1234', '2');
INSERT INTO `study_answer` VALUES ('254', '210', '没有答题', '1234', '2');
INSERT INTO `study_answer` VALUES ('255', '211', '没有答题', '1234', '2');
INSERT INTO `study_answer` VALUES ('256', '201', 'E', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('257', '202', 'E', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('258', '203', 'E', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('259', '204', 'E', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('260', '205', 'E', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('261', '206', 'E', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('262', '207', 'A', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('263', '208', 'A', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('264', '209', 'A', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('265', '210', '没有答题', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('266', '211', '没有答题', '聚聚', '2');
INSERT INTO `study_answer` VALUES ('267', '201', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('268', '202', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('269', '203', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('270', '204', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('271', '205', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('272', '206', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('273', '207', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('274', '208', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('275', '209', 'E', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('276', '210', '讲课轻松，大家交流多，理解非常深刻', 'ROTY', '2');
INSERT INTO `study_answer` VALUES ('277', '211', '可以稍微再仔细点，不过时间只有这么多，确实已经很好了', 'ROTY', '2');

-- ----------------------------
-- Table structure for `study_question`
-- ----------------------------
DROP TABLE IF EXISTS `study_question`;
CREATE TABLE `study_question` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `study_id` int(11) DEFAULT NULL COMMENT '轮数',
  `question` varchar(1000) DEFAULT NULL,
  `is_select` int(11) DEFAULT NULL COMMENT '是否为选择题，0简答题1单选2多选',
  `norma_answer` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=212 DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of study_question
-- ----------------------------
INSERT INTO `study_question` VALUES ('101', '1', '下面关于Spring描述错误的是：', '1', 'C');
INSERT INTO `study_question` VALUES ('102', '1', '下面选项哪个不是Spring中接口注入的方式？', '1', 'D');
INSERT INTO `study_question` VALUES ('103', '1', '下列关于Spring特性中IoC描述错误的是：', '1', 'A');
INSERT INTO `study_question` VALUES ('104', '1', 'Spring AOP的实现中主要用到一下那种技术：', '1', 'B');
INSERT INTO `study_question` VALUES ('105', '1', '本质上，AOP中的截面实际上是：', '1', 'D');
INSERT INTO `study_question` VALUES ('106', '1', '以下对于JVM描述错误的是：', '1', 'C');
INSERT INTO `study_question` VALUES ('107', '1', '以下对GC的描述正确的是：', '1', 'B');
INSERT INTO `study_question` VALUES ('108', '1', '黑箱法构造单元测试中，通常那些方法构造测试案例（多选）', '2', 'ABC');
INSERT INTO `study_question` VALUES ('109', '1', '单元测试案例的构造方法中，路径法可能存在的问题是：', '1', 'D');
INSERT INTO `study_question` VALUES ('110', '1', '对于SSH架构中Service层的单元测试，通常可以采用以下那些方法：（多选）', '2', 'AB');
INSERT INTO `study_question` VALUES ('111', '1', '以下对WebSocket技术描述不正确的是：', '1', 'C');
INSERT INTO `study_question` VALUES ('112', '1', '以下对Struts2描述正确的是：', '1', 'B');
INSERT INTO `study_question` VALUES ('113', '1', 'Struts2中拦截器的实现技术主要是：', '1', 'A');
INSERT INTO `study_question` VALUES ('114', '1', '以下那些是SSH中通常进行数据、逻辑验证的地方：（多选）', '2', 'ABC');
INSERT INTO `study_question` VALUES ('115', '1', '一般情况下，关系数据模型于对象模型之间有哪些匹配关系？（多选）', '2', 'ABCD');
INSERT INTO `study_question` VALUES ('116', '1', '在Hibernate的关联映射中，单向多对一关联的映射应____', '1', 'C');
INSERT INTO `study_question` VALUES ('117', '1', '在Hibernate中，实体类的映射文件用于说明实体类和数据库表的映射关系，以及实体类的属性和表字段的映射关系，每个实体类对应映射文件中一个____节点。', '1', 'C');
INSERT INTO `study_question` VALUES ('118', '1', '使用Hibernate技术实现数据持久化时，下面____内容不在Hibernate配置文件中配置。', '1', 'D');
INSERT INTO `study_question` VALUES ('119', '1', '以下程序代码对Customer的name属性修改了两次： tx = session.beginTransaction(); Customer customer=(Customer)session.load(Customer.class, new Long(1)); customer.setName(”Jack”); customer.setName(”Mike”); tx.commit(); 执行以上程序，Hibernate需要向数据库提交几条update语句？', '1', 'B');
INSERT INTO `study_question` VALUES ('120', '1', '对于以下程序，Customer对象在第几行变为持久化状态？ Customer customer=new Customer(); //line1 customer.setName(”Tom”); //line2 Session session1=sessionFactory.openSession(); //line3 Transaction tx1 = session1.beginTransaction(); //line4 session1.save(customer); //line4 tx1.commit(); //line5 session1.close(); //line6 ', '1', 'D');
INSERT INTO `study_question` VALUES ('201', '2', '授课内容切合培训主题？', '1', 'E');
INSERT INTO `study_question` VALUES ('202', '2', '课程内容符合工作需要？', '1', 'E');
INSERT INTO `study_question` VALUES ('203', '2', '激发学员学习兴趣？', '1', 'E');
INSERT INTO `study_question` VALUES ('204', '2', '讲师与学员的互动性？', '1', 'E');
INSERT INTO `study_question` VALUES ('205', '2', '培训速度适中？', '1', 'E');
INSERT INTO `study_question` VALUES ('206', '2', '授课方式生动活泼且多实例？', '1', 'E');
INSERT INTO `study_question` VALUES ('207', '2', '清楚地阐述各项概念？', '1', 'E');
INSERT INTO `study_question` VALUES ('208', '2', '课中的内容是否有启迪作用？', '1', 'E');
INSERT INTO `study_question` VALUES ('209', '2', '本次课程的整体评价？', '1', 'E');
INSERT INTO `study_question` VALUES ('210', '2', '本次培训感触最深的观点？', '0', '无');
INSERT INTO `study_question` VALUES ('211', '2', '本次培训有什么想对讲师反馈的？', '0', '无');

-- ----------------------------
-- Table structure for `study_question_select`
-- ----------------------------
DROP TABLE IF EXISTS `study_question_select`;
CREATE TABLE `study_question_select` (
  `select_id` int(11) NOT NULL DEFAULT '0',
  `question_id` int(11) DEFAULT NULL,
  `select_value` varchar(10) DEFAULT NULL,
  `select_answer` varchar(1000) DEFAULT NULL,
  PRIMARY KEY (`select_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- ----------------------------
-- Records of study_question_select
-- ----------------------------
INSERT INTO `study_question_select` VALUES ('1011', '101', 'A', ' Spring支持可插入的事务管理器，使事务划分更轻松，同时无需处理底层的问题。');
INSERT INTO `study_question_select` VALUES ('1012', '101', 'B', ' Spring事务管理的通用抽象层还包括JTA策略和一个JDBC DataSource。');
INSERT INTO `study_question_select` VALUES ('1013', '101', 'C', ' 与JTA或EJB CMT一样，Spring的事务支持依赖于Java EE环境。');
INSERT INTO `study_question_select` VALUES ('1014', '101', 'D', ' Spring事务语义通过AOP应用于 POJO，通过XML或Java SE 5注释进行配置。');
INSERT INTO `study_question_select` VALUES ('1021', '102', 'A', ' 接口注入　　');
INSERT INTO `study_question_select` VALUES ('1022', '102', 'B', ' 构造子注入　　');
INSERT INTO `study_question_select` VALUES ('1023', '102', 'C', ' 设值注入　　');
INSERT INTO `study_question_select` VALUES ('1024', '102', 'D', ' 指针注入');
INSERT INTO `study_question_select` VALUES ('1031', '103', 'A', ' IoC就是指程序之间的关系由程序代码直接操控。');
INSERT INTO `study_question_select` VALUES ('1032', '103', 'B', ' 所谓“控制反转”,是指控制权由应用代码转到外部容器，控制权的转移，');
INSERT INTO `study_question_select` VALUES ('1033', '103', 'C', ' IoC将控制创建的职责搬进了框架中；并把它从应用代码脱离开来');
INSERT INTO `study_question_select` VALUES ('1034', '103', 'D', ' 当使用Spring的IoC容器时只需指出组件需要的对象，在运行时Spring的IoC容器会根据XML配置数据提供给它。');
INSERT INTO `study_question_select` VALUES ('1041', '104', 'A', ' Java AOP');
INSERT INTO `study_question_select` VALUES ('1042', '104', 'B', ' Java 动态代理');
INSERT INTO `study_question_select` VALUES ('1043', '104', 'C', ' Spring代理');
INSERT INTO `study_question_select` VALUES ('1044', '104', 'D', ' C JNI代码');
INSERT INTO `study_question_select` VALUES ('1051', '105', 'A', ' 符合指定条件的函数的集合');
INSERT INTO `study_question_select` VALUES ('1052', '105', 'B', ' 程序的一个模块');
INSERT INTO `study_question_select` VALUES ('1053', '105', 'C', ' 一个设计概念，无法和具体程序对应');
INSERT INTO `study_question_select` VALUES ('1054', '105', 'D', ' 以上都不对');
INSERT INTO `study_question_select` VALUES ('1061', '106', 'A', ' 每个单独运行的Java应用都是一个JVM的运行实例');
INSERT INTO `study_question_select` VALUES ('1062', '106', 'B', ' GC的时间通常由JVM自己决定');
INSERT INTO `study_question_select` VALUES ('1063', '106', 'C', ' 各JVM之间可以共堆空间');
INSERT INTO `study_question_select` VALUES ('1064', '106', 'D', ' GC的频度与堆大小有关');
INSERT INTO `study_question_select` VALUES ('1071', '107', 'A', 'GC的回收算法只有引用计数法');
INSERT INTO `study_question_select` VALUES ('1072', '107', 'B', ' 新产生的对象一定是建立在新生代');
INSERT INTO `study_question_select` VALUES ('1073', '107', 'C', ' GC的总时间通常不包括新生代的回收时间');
INSERT INTO `study_question_select` VALUES ('1074', '107', 'D', ' 以上都不正确');
INSERT INTO `study_question_select` VALUES ('1081', '108', 'A', ' 等价类划分');
INSERT INTO `study_question_select` VALUES ('1082', '108', 'B', ' 边界值法');
INSERT INTO `study_question_select` VALUES ('1083', '108', 'C', ' 特殊值法');
INSERT INTO `study_question_select` VALUES ('1084', '108', 'D', ' 路径法');
INSERT INTO `study_question_select` VALUES ('1091', '109', 'A', '不可能穷尽所有的路径');
INSERT INTO `study_question_select` VALUES ('1092', '109', 'B', ' 太多路径');
INSERT INTO `study_question_select` VALUES ('1093', '109', 'C', ' 有些路径无法实现');
INSERT INTO `study_question_select` VALUES ('1094', '109', 'D', ' 无法测试出程序的实现与规格说明不同的情况');
INSERT INTO `study_question_select` VALUES ('1101', '110', 'A', ' 使用DBUnit辅助进行测试');
INSERT INTO `study_question_select` VALUES ('1102', '110', 'B', ' 使用Mock对象进行测试');
INSERT INTO `study_question_select` VALUES ('1103', '110', 'C', '手工从WEB层触发');
INSERT INTO `study_question_select` VALUES ('1104', '110', 'D', ' 以上都不对');
INSERT INTO `study_question_select` VALUES ('1111', '111', 'A', ' WebSocket支持长连接');
INSERT INTO `study_question_select` VALUES ('1112', '111', 'B', '  WebSocket支持服务端信息的推送');
INSERT INTO `study_question_select` VALUES ('1113', '111', 'C', '  WebSocket使用同步的编程接口');
INSERT INTO `study_question_select` VALUES ('1114', '111', 'D', ' 以上都不正确');
INSERT INTO `study_question_select` VALUES ('1121', '112', 'A', ' Struts2的核心调度通过Servlet来完成');
INSERT INTO `study_question_select` VALUES ('1122', '112', 'B', ' Struts2中的扩展主要依赖与其核心的拦截器技术');
INSERT INTO `study_question_select` VALUES ('1123', '112', 'C', ' Struts2中不能定制已有的拦截器的顺序');
INSERT INTO `study_question_select` VALUES ('1124', '112', 'D', ' 以上都不正确');
INSERT INTO `study_question_select` VALUES ('1131', '113', 'A', ' 命令 + 职责链模式');
INSERT INTO `study_question_select` VALUES ('1132', '113', 'B', ' JAVA动态代理');
INSERT INTO `study_question_select` VALUES ('1133', '113', 'C', ' Servlet Filter');
INSERT INTO `study_question_select` VALUES ('1134', '113', 'D', ' 代理模式');
INSERT INTO `study_question_select` VALUES ('1141', '114', 'A', ' Service方法');
INSERT INTO `study_question_select` VALUES ('1142', '114', 'B', ' Struts2的验证框架');
INSERT INTO `study_question_select` VALUES ('1143', '114', 'C', ' Action方法');
INSERT INTO `study_question_select` VALUES ('1144', '114', 'D', ' 以上都不对');
INSERT INTO `study_question_select` VALUES ('1151', '115', 'A', ' 表对应类 ');
INSERT INTO `study_question_select` VALUES ('1152', '115', 'B', ' 记录对应对象 ');
INSERT INTO `study_question_select` VALUES ('1153', '115', 'C', ' 表的字段对应类的属性 ');
INSERT INTO `study_question_select` VALUES ('1154', '115', 'D', ' 表之间的参考关系对应类之间的依赖关系 ');
INSERT INTO `study_question_select` VALUES ('1161', '116', 'A', ' 配置在多的一方的映射中 ');
INSERT INTO `study_question_select` VALUES ('1162', '116', 'B', ' 配置在单一的一方的映射中 ');
INSERT INTO `study_question_select` VALUES ('1163', '116', 'C', ' 配置在哪一方均可，但只可在一方配置 ');
INSERT INTO `study_question_select` VALUES ('1164', '116', 'D', ' 两方均需要配置');
INSERT INTO `study_question_select` VALUES ('1171', '117', 'A', ' id');
INSERT INTO `study_question_select` VALUES ('1172', '117', 'B', ' class');
INSERT INTO `study_question_select` VALUES ('1173', '117', 'C', ' table');
INSERT INTO `study_question_select` VALUES ('1174', '117', 'D', ' property');
INSERT INTO `study_question_select` VALUES ('1181', '118', 'A', ' 数据库连接信息 ');
INSERT INTO `study_question_select` VALUES ('1182', '118', 'B', ' 数据库类型（dialect） ');
INSERT INTO `study_question_select` VALUES ('1183', '118', 'C', ' show_sql参数 ');
INSERT INTO `study_question_select` VALUES ('1184', '118', 'D', ' 数据库表和实体的映射信息');
INSERT INTO `study_question_select` VALUES ('1191', '119', 'A', ' 0');
INSERT INTO `study_question_select` VALUES ('1192', '119', 'B', ' 1');
INSERT INTO `study_question_select` VALUES ('1193', '119', 'C', ' 2');
INSERT INTO `study_question_select` VALUES ('1194', '119', 'D', ' 3');
INSERT INTO `study_question_select` VALUES ('1201', '120', 'A', ' line1');
INSERT INTO `study_question_select` VALUES ('1202', '120', 'B', ' line2');
INSERT INTO `study_question_select` VALUES ('1203', '120', 'C', ' line3');
INSERT INTO `study_question_select` VALUES ('1204', '120', 'D', ' line4');
INSERT INTO `study_question_select` VALUES ('1205', '120', 'E', ' line5');
INSERT INTO `study_question_select` VALUES ('1206', '120', 'F', ' line6');
INSERT INTO `study_question_select` VALUES ('2011', '201', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2012', '201', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2013', '201', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2014', '201', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2015', '201', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2021', '202', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2022', '202', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2023', '202', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2024', '202', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2025', '202', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2031', '203', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2032', '203', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2033', '203', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2034', '203', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2035', '203', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2041', '204', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2042', '204', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2043', '204', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2044', '204', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2045', '204', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2051', '205', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2052', '205', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2053', '205', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2054', '205', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2055', '205', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2061', '206', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2062', '206', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2063', '206', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2064', '206', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2065', '206', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2071', '207', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2072', '207', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2073', '207', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2074', '207', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2075', '207', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2081', '208', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2082', '208', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2083', '208', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2084', '208', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2085', '208', 'E', '五颗星');
INSERT INTO `study_question_select` VALUES ('2091', '209', 'A', '一颗星');
INSERT INTO `study_question_select` VALUES ('2092', '209', 'B', '两颗星');
INSERT INTO `study_question_select` VALUES ('2093', '209', 'C', '三颗星');
INSERT INTO `study_question_select` VALUES ('2094', '209', 'D', '四颗星');
INSERT INTO `study_question_select` VALUES ('2095', '209', 'E', '五颗星');
